[{"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/index.js":"1","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/App.js":"2","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/reportWebVitals.js":"3","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/ScrollToTop.js":"4","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Game.js":"5","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Gamemaster.js":"6","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/GlossaryPage.js":"7","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Home.js":"8","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Help.js":"9","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/PlayAgain.js":"10","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/About.js":"11","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Player.js":"12","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/NavBar.js":"13","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/Footer.js":"14","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Guidebook.js":"15","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/global.js":"16","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/glossary.js":"17","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/StockMarket.js":"18","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/SetBudget.js":"19","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/GuidebookModal.js":"20","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/ChooseCareer.js":"21","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/FinancialTracker.js":"22","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/WorldEvents.js":"23","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/SetFinancialGoal.js":"24","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/GlossarySearch.js":"25","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/stockMarketData.js":"26","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/worldEventsData.js":"27","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/financialGoalData.js":"28","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/careerData.js":"29"},{"size":500,"mtime":1617491121867,"results":"30","hashOfConfig":"31"},{"size":1577,"mtime":1617491121863,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1617491121869,"results":"33","hashOfConfig":"31"},{"size":240,"mtime":1617491121863,"results":"34","hashOfConfig":"31"},{"size":5066,"mtime":1617658731577,"results":"35","hashOfConfig":"31"},{"size":4186,"mtime":1617659528011,"results":"36","hashOfConfig":"31"},{"size":1633,"mtime":1617645524592,"results":"37","hashOfConfig":"31"},{"size":1251,"mtime":1617659146765,"results":"38","hashOfConfig":"31"},{"size":941,"mtime":1617645524592,"results":"39","hashOfConfig":"31"},{"size":444,"mtime":1617645524592,"results":"40","hashOfConfig":"31"},{"size":1514,"mtime":1617645524591,"results":"41","hashOfConfig":"31"},{"size":12362,"mtime":1617664569454,"results":"42","hashOfConfig":"31"},{"size":2064,"mtime":1617663254411,"results":"43","hashOfConfig":"31"},{"size":318,"mtime":1617491121870,"results":"44","hashOfConfig":"31"},{"size":635,"mtime":1617645524592,"results":"45","hashOfConfig":"31"},{"size":3106,"mtime":1617661922902,"results":"46","hashOfConfig":"31"},{"size":546,"mtime":1617491121867,"results":"47","hashOfConfig":"31"},{"size":2604,"mtime":1617659643513,"results":"48","hashOfConfig":"31"},{"size":6198,"mtime":1617648675951,"results":"49","hashOfConfig":"31"},{"size":2617,"mtime":1617663321869,"results":"50","hashOfConfig":"31"},{"size":1727,"mtime":1617657659051,"results":"51","hashOfConfig":"31"},{"size":7887,"mtime":1617648675951,"results":"52","hashOfConfig":"31"},{"size":2140,"mtime":1617645524591,"results":"53","hashOfConfig":"31"},{"size":2166,"mtime":1617661757318,"results":"54","hashOfConfig":"31"},{"size":2073,"mtime":1617645524589,"results":"55","hashOfConfig":"31"},{"size":1095,"mtime":1617491121870,"results":"56","hashOfConfig":"31"},{"size":546,"mtime":1617491121870,"results":"57","hashOfConfig":"31"},{"size":530,"mtime":1617661660150,"results":"58","hashOfConfig":"31"},{"size":389,"mtime":1617491121866,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"a476si",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/index.js",[],["131","132"],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/App.js",["133","134"],"import {\n\tBrowserRouter as Router,\n\tRoute,\n\tBrowserRouter,\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport './App.css';\n\nimport ScrollToTop from './ScrollToTop';\n\nimport NavBar from './shared/NavBar';\nimport Footer from './shared/Footer';\n\nimport Home from './pages/Home';\nimport Gamemaster from './pages/Gamemaster';\nimport GlossaryPage from './pages/GlossaryPage';\nimport Guidebook from './pages/Guidebook';\nimport About from './pages/About';\nimport Help from './pages/Help';\nimport PlayAgain from './pages/PlayAgain';\nimport Player from './pages/Player';\nimport Game from './pages/Game';\n\nconst AppContainer = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 75px 1fr;\n\theight: 100vh;\n\toverflow: hidden;\n`;\n\nconst DynamicContainer = styled.div`\n\toverflow: auto;\n`;\n\nconst App = () => {\n\treturn (\n\t\t<BrowserRouter onUpdate={() => window.scrollTo(0, 0)}>\n\t\t\t<ScrollToTop />\n\t\t\t<AppContainer>\n\t\t\t\t<NavBar />\n\t\t\t\t<DynamicContainer>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/game\" component={Game} />\n\t\t\t\t\t<Route exact path=\"/gamemaster\" component={Gamemaster} />\n\t\t\t\t\t<Route exact path=\"/player\" component={Player} />\n\t\t\t\t\t<Route exact path=\"/glossary\" component={GlossaryPage} />\n\t\t\t\t\t<Route exact path=\"/guidebook\" component={Guidebook} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t<Route exact path=\"/help\" component={Help} />\n\t\t\t\t\t<Route exact path=\"/play-again\" component={PlayAgain} />\n\t\t\t\t</DynamicContainer>\n\t\t\t\t{/* <Footer /> */}\n\t\t\t</AppContainer>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/reportWebVitals.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/ScrollToTop.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Game.js",["135","136","137","138","139"],"import React, { useState, useEffect } from 'react';\nimport {\n\tColumnFlex,\n\tContainer,\n\tH1,\n\tPrimaryButton,\n\tTextInput,\n\tButton,\n\tFlexBetween,\n} from '../shared/global';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Gamemaster from './../assets/gamemaster.png';\nimport Player from './../assets/player.png';\n\nconst PlayerButton = styled(Button)`\n\tbackground-color: #ecf1f7;\n\ttext-align: center;\n\tvertical-align: center;\n\twidth: 250px;\n\tmargin: 1rem;\n\tfont-size: 1.5rem;\n\tfont-weight: 700;\n`;\n\nconst GamemasterButton = styled(Button)`\n\tbackground-color: #fef9e6;\n\ttext-align: center;\n\tvertical-align: center;\n\twidth: 250px;\n\tmargin: 1rem;\n\tfont-size: 1.5rem;\n\tfont-weight: 700;\n`;\n\nconst FlexContainer = styled.div`\n\tdisplay: flex;\n`;\n\nconst Game = () => {\n\tconst [username, setUsername] = useState();\n\tconst [role, setRole] = useState();\n\tconst [serverName, setServerName] = useState();\n\tconst [ready, setReady] = useState(false);\n\tconst [existingServers, setExistingServers] = useState([]);\n\tconst [newPopulation, setNewPopulation] = useState(1);\n\n\tconst history = useHistory();\n\n\tconst beginGame = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(username + ' is a ' + role);\n\n\t\tconst user = {\n\t\t\tusername: username,\n\t\t\trole: role,\n\t\t};\n\n\t\t// create an error for if username is null or undefine\n\t\t// set parameter requirements for username\n\n\t\taxios\n\t\t\t.post('https://the-price-of-life.herokuapp.com/users/add', user)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\tsetReady(true);\n\t};\n\n\tconst createServer = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('server name is' + serverName);\n\n\t\tconst serverInfo = {\n\t\t\tservername: serverName,\n\t\t\tpopulation: 1,\n\t\t};\n\n\t\tfor (let i = 0; i <= existingServers.length; i++) {\n\t\t\tif (serverName === existingServers[i]) {\n\t\t\t\talert('server already exists. choose a new name');\n\t\t\t\t// TODO clear the input field\n\t\t\t} else {\n\t\t\t\taxios\n\t\t\t\t\t.post(\n\t\t\t\t\t\t'https://the-price-of-life.herokuapp.com/serverRoom/add',\n\t\t\t\t\t\tserverInfo\n\t\t\t\t\t)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\t\thistory.push(\n\t\t\t\t\t\t\t'/gamemaster?username=' + username + '&servername=' + serverName\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst joinServer = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('server name is' + serverName);\n\n\t\tfor (let i = 0; i <= existingServers.length; i++) {\n\t\t\tif (serverName === existingServers[i]) {\n\t\t\t\tif (existingServers[i].population !== 7) {\n\t\t\t\t\taxios\n\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t'https://the-price-of-life.herokuapp.com/serverRoom/updatePopulation/' +\n\t\t\t\t\t\t\t\tserverName\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tconsole.log(res.data.population);\n\t\t\t\t\t\t});\n\n\t\t\t\t\thistory.push(\n\t\t\t\t\t\t'/player?username=' + username + '&servername=' + serverName\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('too many people here');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('server does not exist');\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get('https://the-price-of-life.herokuapp.com/serverRoom')\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.length > 0) {\n\t\t\t\t\tsetExistingServers(response.data.map((server) => server.servername));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t{ready === false ? (\n\t\t\t\t<ColumnFlex>\n\t\t\t\t\t<H1>What would you like to be called?</H1>\n\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder=\"Write your username here\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t}}></TextInput>\n\t\t\t\t\t<H1>What is your role?</H1>\n\t\t\t\t\t<FlexContainer>\n\t\t\t\t\t\t<PlayerButton\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\trole === 'player'\n\t\t\t\t\t\t\t\t\t? { border: '2px solid #4F73B6' }\n\t\t\t\t\t\t\t\t\t: { border: 'none' }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tsetRole('player');\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<ColumnFlex>\n\t\t\t\t\t\t\t\t<img src={Player}></img>\n\t\t\t\t\t\t\t\t<span style={{ color: '#4f73b6' }}>Player</span>\n\t\t\t\t\t\t\t</ColumnFlex>\n\t\t\t\t\t\t</PlayerButton>\n\t\t\t\t\t\t<GamemasterButton\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\trole === 'gamemaster'\n\t\t\t\t\t\t\t\t\t? { border: '2px solid #F0C418' }\n\t\t\t\t\t\t\t\t\t: { border: 'none' }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tsetRole('gamemaster');\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<ColumnFlex>\n\t\t\t\t\t\t\t\t<img src={Gamemaster}></img>\n\t\t\t\t\t\t\t\t<span style={{ color: '#f0c418' }}>Gamemaster</span>\n\t\t\t\t\t\t\t</ColumnFlex>\n\t\t\t\t\t\t</GamemasterButton>\n\t\t\t\t\t</FlexContainer>\n\n\t\t\t\t\t<PrimaryButton onClick={beginGame}>Submit</PrimaryButton>\n\t\t\t\t</ColumnFlex>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{role === 'player' ? (\n\t\t\t\t\t\t<ColumnFlex>\n\t\t\t\t\t\t\t<H1>Join Server</H1>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tplaceholder=\"Find a Server\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetServerName(e.target.value);\n\t\t\t\t\t\t\t\t}}></TextInput>\n\t\t\t\t\t\t\t<PrimaryButton onClick={joinServer}>Join</PrimaryButton>\n\t\t\t\t\t\t</ColumnFlex>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ColumnFlex>\n\t\t\t\t\t\t\t<H1>Host Server</H1>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tname=\"servername\"\n\t\t\t\t\t\t\t\tplaceholder=\"Create a Server\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetServerName(e.target.value);\n\t\t\t\t\t\t\t\t}}></TextInput>\n\t\t\t\t\t\t\t<PrimaryButton onClick={createServer}>Create Room</PrimaryButton>\n\t\t\t\t\t\t</ColumnFlex>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t);\n\t//\n};\n\nexport default Game;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Gamemaster.js",["140"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n\tContainer,\n\tLargeP,\n\tPrimaryButton,\n\tClearButton,\n} from '../shared/global';\nimport WorldEvents from '../components/WorldEvents';\nimport StockMarket from '../components/StockMarket';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nconst Grid = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\tgrid-column-gap: 1rem;\n\tpadding: 0 1rem;\n`;\n\nconst DashboardItem = styled.div`\n\tgrid-column: span 1;\n\tpadding: 1rem;\n\tbackground-color: white;\n\tmargin: 1rem 0;\n\toverflow: auto;\n\theight: calc(100vh - 75px - 50px - 2rem);\n\tborder-radius: 5px;\n`;\n\nconst RoundCounter = styled.h1`\n\tfont-size: 7rem;\n\tmargin: 2rem 0;\n\tfont-family: ohno-blazeface, sans-serif;\n\tfont-weight: 700;\n\tcolor: #f0c418;\n`;\n\nconst Modal = styled.div`\n\tbackground-color: #fff;\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tborder: #ccc solid 1px;\n\tmargin: 1rem auto;\n\twidth: 100%;\n\tmax-width: 500px;\n\tpadding: 1rem;\n\tborder-radius: 5px;\n\tcolor: #000;\n\ttext-align: center;\n`;\n\nconst RoundTrackerContainer = styled.div`\n\tbackground-color: #fef9e6;\n\tcolor: #f0c418;\n\twidth: 100%;\n\tpadding: 1rem;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-direction: column;\n\talign-items: center;\n\theight: 100%;\n`;\n\nconst ButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n\nconst ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\t& ${PrimaryButton} {\n\t\tmargin: 1rem 0;\n\t}\n`;\n\nconst GameStrip = styled.div`\n\twidth: 100%;\n\tbackground-color: #f0c418;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0.5rem 1rem;\n\tfont-size: 1.25rem;\n`;\n\nconst Gamemaster = ({ location }) => {\n\tconst [roundCount, setRoundCount] = useState(1);\n\tconst [openDialog, setOpenDialog] = useState(false);\n\tconst [username, setUsername] = useState('');\n\tconst [servername, setServername] = useState('');\n\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst { username, servername } = queryString.parse(location.search);\n\t\tsetUsername(username);\n\t\tsetServername(servername);\n\t\tconsole.log(roundCount);\n\t}, []);\n\n\tconst updateDb = (e) => {\n\t\te.preventDefault();\n\n\t\tsetRoundCount(roundCount + 1);\n\n\t\tconst roundCounter = {\n\t\t\troundcounter: roundCount + 1,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/serverRoom/updateRound/' +\n\t\t\t\t\tservername,\n\t\t\t\troundCounter\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\t};\n\n\tconst endGame = () => {\n\t\taxios\n\t\t\t.delete(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/serverRoom/' + servername\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\n\t\thistory.push('/play-again');\n\t};\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={{\n\t\t\t\tpadding: '0',\n\t\t\t}}>\n\t\t\t<GameStrip>\n\t\t\t\t<span>Server: {servername}</span>\n\t\t\t\t<span style={{ fontWeight: '700' }}>{username}'s Dashboard</span>\n\t\t\t\t<span>\n\t\t\t\t\t{/* population in room: */}\n\t\t\t\t\t{/* TOD: get population via axios */}\n\t\t\t\t</span>\n\t\t\t</GameStrip>\n\t\t\t<Grid>\n\t\t\t\t<DashboardItem style={{ padding: '0rem' }}>\n\t\t\t\t\t<RoundTrackerContainer>\n\t\t\t\t\t\t<LargeP> Round Tracker</LargeP>\n\t\t\t\t\t\t<RoundCounter> {roundCount}</RoundCounter>\n\t\t\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t\t\t<PrimaryButton onClick={updateDb}>Next Round</PrimaryButton>\n\t\t\t\t\t\t\t<ClearButton onClick={() => setOpenDialog(true)}>\n\t\t\t\t\t\t\t\tEnd Game\n\t\t\t\t\t\t\t</ClearButton>\n\t\t\t\t\t\t</ButtonsContainer>\n\t\t\t\t\t\t{openDialog === true ? (\n\t\t\t\t\t\t\t<Modal>\n\t\t\t\t\t\t\t\t<h2>Are you sure you want to end the game?</h2>\n\t\t\t\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t\t\t\t<PrimaryButton onClick={() => setOpenDialog(false)}>\n\t\t\t\t\t\t\t\t\t\tNo, continue game\n\t\t\t\t\t\t\t\t\t</PrimaryButton>\n\t\t\t\t\t\t\t\t\t<PrimaryButton onClick={endGame}>Yes, end game</PrimaryButton>\n\t\t\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</RoundTrackerContainer>\n\t\t\t\t</DashboardItem>\n\t\t\t\t<DashboardItem>\n\t\t\t\t\t<WorldEvents roundCounter={roundCount}></WorldEvents>\n\t\t\t\t</DashboardItem>\n\t\t\t\t<DashboardItem>\n\t\t\t\t\t<StockMarket roundCounter={roundCount}></StockMarket>\n\t\t\t\t</DashboardItem>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n};\n\nexport default Gamemaster;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/GlossaryPage.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Home.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Help.js",["141"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Container } from './../shared/global';\nimport Collapsible from 'react-collapsible';\n\nconst Help = () => {\n\treturn (\n\t\t<Container style={{ textAlign: 'center' }}>\n\t\t\t<h1>Help Center</h1>\n\n\t\t\t<Collapsible trigger=\"Question 1\">\n\t\t\t\t<p>\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff here!!!\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!!\n\t\t\t\t</p>\n\t\t\t</Collapsible>\n\t\t\t<Collapsible trigger=\"Question 2\">\n\t\t\t\t<p>\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff here!!!\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!!\n\t\t\t\t</p>\n\t\t\t</Collapsible>\n\t\t</Container>\n\t);\n};\n\nexport default Help;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/PlayAgain.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/About.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Player.js",["142","143","144","145","146"],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/NavBar.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/Footer.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/pages/Guidebook.js",["147"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Container, H1, P } from './../shared/global';\nimport Collapsible from 'react-collapsible';\n\nconst Guidebook = () => {\n\treturn (\n\t\t<Container style={{ textAlign: 'center' }}>\n\t\t\t<H1>Guidebook</H1>\n\n\t\t\t<Collapsible trigger=\"Set Up\">\n\t\t\t\t<P>\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff here!!!\n\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\tstuff here!!!\n\t\t\t\t</P>\n\t\t\t</Collapsible>\n\t\t</Container>\n\t);\n};\n\nexport default Guidebook;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/shared/global.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/glossary.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/StockMarket.js",["148","149"],"import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, H1, HeadingImg, P } from '../shared/global';\nimport stockMarketData from './../stockMarketData';\nimport Stocks from './../assets/Icon/Stocks.png';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #eee 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(12, 1fr);\n\tgrid-column-gap: 2rem;\n`;\n\nconst Ticker = styled.div`\n\tgrid-column: span 2;\n\tfont-weight: 700;\n`;\n\nconst StockName = styled.div`\n\tgrid-column: span 6;\n`;\n\nconst StockPrice = styled.div`\n\tgrid-column: span 3;\n\tfont-weight: 700;\n\t&::before {\n\t\tcontent: '$';\n\t}\n`;\n\nconst ArrowContainer = styled.div`\n\tgrid-column: span 1;\n`;\n\nconst MaterialIcons = styled.div`\n\tfont-family: 'Material Icons';\n`;\n\nconst StockCard = (props) => {\n\tconst [stockPrice, setStockPrice] = useState(0);\n\tconst previousPriceRef = useRef();\n\n\tconst MINUTE_MS = 300000; // 5 minutes is 300000\n\n\tlet growth = Math.floor(props.monthlyGrowth * props.roundCounter);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetStockPrice(\n\t\t\t\tprops.startingPrice + Math.floor(Math.random(0, growth) * 100)\n\t\t\t);\n\t\t\tconsole.log('Logs every second');\n\t\t}, MINUTE_MS);\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tpreviousPriceRef.current = stockPrice;\n\t});\n\n\tconst previousPrice = previousPriceRef.current;\n\n\tlet arrow;\n\n\tif (stockPrice > previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#33B466' }}>arrow_upward</MaterialIcons>\n\t\t);\n\t} else if (stockPrice < previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#C64949' }}>arrow_downward</MaterialIcons>\n\t\t);\n\t} else {\n\t\tarrow = <MaterialIcons>=</MaterialIcons>;\n\t}\n\n\treturn (\n\t\t<StockCardContainer>\n\t\t\t<Ticker>{props.stockTicker}</Ticker>\n\t\t\t<StockName>{props.stockName}</StockName>\n\t\t\t<StockPrice>{stockPrice}</StockPrice>\n\t\t\t<ArrowContainer>{arrow}</ArrowContainer>\n\t\t</StockCardContainer>\n\t);\n};\n\nconst StockMarket = (props) => {\n\tconst stocks = stockMarketData.map((stock) => (\n\t\t<StockCard\n\t\t\troundCounter={props.roundCounter}\n\t\t\tstockTicker={stock.ticker}\n\t\t\tstockName={stock.stockName}\n\t\t\tstartingPrice={stock.startingPrice}\n\t\t\tmonthlyGrowth={stock.monthlyGrowth}\n\t\t\tkey={stock.ticker}></StockCard>\n\t));\n\n\treturn (\n\t\t<Container>\n\t\t\t<CardHeading>\n\t\t\t\t<HeadingImg src={Stocks}></HeadingImg>\n\t\t\t\t<H1>Stock Market</H1>\n\t\t\t</CardHeading>\n\t\t\t{stocks}\n\t\t</Container>\n\t);\n};\n\nexport default StockMarket;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/SetBudget.js",["150","151"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n\tColumnFlex,\n\tFlexBetween,\n\tPrimaryButton,\n\tTextInput,\n\tP,\n\tH3,\n\tH4,\n} from '../shared/global';\nimport axios from 'axios';\n\nconst StyledTextInput = styled(TextInput)`\n\twidth: 200px;\n\tfont-size: 1rem;\n\tmargin: 0.5rem 0.5rem 0.5rem 2rem;\n\tpadding: 0.125rem 0.5rem;\n`;\n\nconst StyledDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tbackground-color: #fff;\n\tpadding: 0.5rem;\n\tborder-radius: 5px;\n\tmargin: 1rem 0;\n\n\t& > * {\n\t\tmargin: 0.2rem 0;\n\t}\n`;\n\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0 1rem;\n`;\n\nconst StyledTotal = styled.div`\n\tbackground-color: #fff;\n\tpadding: 1rem;\n\tborder-radius: 5px;\n\tmargin: 1rem 0;\n`;\n\nconst Summary = styled.div`\n\tmargin-left: 3rem;\n`;\n\nconst SetBudget = (props) => {\n\tconst username = props.username;\n\n\tconst [housing, setHousing] = useState(0);\n\tconst [utilities, setUtilities] = useState(0);\n\tconst [transportation, setTransportation] = useState(0);\n\tconst [grocery, setGrocery] = useState(0);\n\tconst [entertainment, setEntertainment] = useState(0);\n\tconst [restaurants, setRestaurants] = useState(0);\n\tconst [pets, setPets] = useState(0);\n\tconst [clothing, setClothing] = useState(0);\n\tconst [health, setHealth] = useState(0);\n\tconst [household, setHousehold] = useState(0);\n\tconst [personal, setPersonal] = useState(0);\n\tconst [total, setTotal] = useState(0);\n\n\tconst calculateTotal = () => {\n\t\tlet answer;\n\t\tanswer =\n\t\t\tNumber(housing) +\n\t\t\tNumber(utilities) +\n\t\t\tNumber(transportation) +\n\t\t\tNumber(grocery) +\n\t\t\tNumber(entertainment) +\n\t\t\tNumber(restaurants) +\n\t\t\tNumber(pets) +\n\t\t\tNumber(clothing) +\n\t\t\tNumber(health) +\n\t\t\tNumber(household) +\n\t\t\tNumber(personal);\n\n\t\tsetTotal(answer);\n\t};\n\n\tconst setBudget = (e) => {\n\t\te.preventDefault();\n\n\t\tconst budgetInfo = {\n\t\t\thousing: housing,\n\t\t\tutilities: utilities,\n\t\t\ttransportation: transportation,\n\t\t\tgrocery: grocery,\n\t\t\tentertainment: entertainment,\n\t\t\trestaurants: restaurants,\n\t\t\tpets: pets,\n\t\t\tclothing: clothing,\n\t\t\thealth: health,\n\t\t\thousehold: household,\n\t\t\tpersonal: personal,\n\t\t\ttotal: total,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/users/setBudget/' + username,\n\t\t\t\tbudgetInfo\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\talert('budget added');\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<ColumnFlex>\n\t\t\t<FlexBetween>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Housing</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Housing\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetHousing(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Utilities</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Utilities\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetUtilities(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Transportation</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Transportation\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetTransportation(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Grocery</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Grocery\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetGrocery(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Entertainment</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Entertainment\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetEntertainment(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Restaurants</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Restaurants\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetRestaurants(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Pets</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Pets\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetPets(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Clothing</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Clothing\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetClothing(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Health</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Health\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetHealth(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Household</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Household\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetHousehold(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t\t<InputRow>\n\t\t\t\t\t\t<H4>Personal</H4>\n\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"Personal\"\n\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetPersonal(e.target.value);\n\t\t\t\t\t\t\t}}></StyledTextInput>\n\t\t\t\t\t</InputRow>\n\t\t\t\t</StyledDiv>\n\n\t\t\t\t<Summary>\n\t\t\t\t\t{/* <StyledP>housing: {housing}</StyledP>\n\t\t\t\t\t<StyledP>utilities: {utilities}</StyledP>\n\t\t\t\t\t<StyledP>transportation: {transportation}</StyledP>\n\t\t\t\t\t<StyledP>grocery: {grocery}</StyledP>\n\t\t\t\t\t<StyledP>entertainment: {entertainment}</StyledP>\n\t\t\t\t\t<StyledP>restaurants: {restaurants}</StyledP>\n\t\t\t\t\t<StyledP>pets: {pets}</StyledP>\n\t\t\t\t\t<StyledP>clothing: {clothing}</StyledP>\n\t\t\t\t\t<StyledP>health: {health}</StyledP>\n\t\t\t\t\t<StyledP>household: {household}</StyledP>\n\t\t\t\t\t<StyledP>personal: {personal}</StyledP> */}\n\t\t\t\t\t<StyledTotal>\n\t\t\t\t\t\t<H3> Total: {total}</H3>\n\t\t\t\t\t</StyledTotal>\n\t\t\t\t\t<ColumnFlex>\n\t\t\t\t\t\t<PrimaryButton onClick={calculateTotal}>Calculate</PrimaryButton>\n\t\t\t\t\t\t<PrimaryButton onClick={setBudget}>Set Budget</PrimaryButton>\n\t\t\t\t\t</ColumnFlex>\n\t\t\t\t</Summary>\n\t\t\t</FlexBetween>\n\t\t</ColumnFlex>\n\t);\n};\n\nexport default SetBudget;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/GuidebookModal.js",["152"],"import React, { useState } from 'react';\nimport { Container, PrimaryButton } from './../shared/global';\nimport styled from 'styled-components';\nimport Collapsible from 'react-collapsible';\nimport { GrFormClose } from 'react-icons/gr';\n\nconst Modal = styled.div`\n\tbackground-color: #fff;\n\tposition: absolute;\n\ttop: 10vh;\n\tleft: 0;\n\tright: 0;\n\tborder: #ccc solid 1px;\n\tmargin: 1rem auto;\n\twidth: 100%;\n\tmax-width: 1000px;\n\tpadding: 1rem;\n\tborder-radius: 5px;\n\theight: 80vh;\n\toverflow-x: scroll;\n\ttext-align: left;\n`;\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nconst StyledButton = styled(PrimaryButton)`\n\tposition: relative;\n`;\n\nconst CloseButton = styled.button`\n\tbackground-color: transparent;\n\tappearance: none;\n\tborder: 0;\n\tfont-size: 2rem;\n\tline-height: 2rem;\n`;\n\nconst GuidebookModal = () => {\n\tconst [toggle, setToggle] = useState(false);\n\n\treturn (\n\t\t<div style={{ padding: '0' }}>\n\t\t\t<StyledButton onClick={() => setToggle(true)}>\n\t\t\t\tView Guidebook\n\t\t\t</StyledButton>\n\n\t\t\t{toggle === true ? (\n\t\t\t\t<Modal>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<h1>Guidebook</h1>\n\t\t\t\t\t\t<CloseButton>\n\t\t\t\t\t\t\t<GrFormClose onClick={() => setToggle(false)} />\n\t\t\t\t\t\t</CloseButton>\n\t\t\t\t\t</Header>\n\n\t\t\t\t\t<Collapsible trigger=\"Set Up\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample\n\t\t\t\t\t\t\ttoggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff\n\t\t\t\t\t\t\there!!! Sample toggle stuff here!!!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Collapsible>\n\t\t\t\t\t<Collapsible trigger=\"How to Play\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample\n\t\t\t\t\t\t\ttoggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff\n\t\t\t\t\t\t\there!!! Sample toggle stuff here!!!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Collapsible>\n\t\t\t\t\t<Collapsible trigger=\"Learning Guide\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample\n\t\t\t\t\t\t\ttoggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff\n\t\t\t\t\t\t\there!!! Sample toggle stuff here!!!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Collapsible>\n\t\t\t\t\t<Collapsible trigger=\"Facilitator Guide\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSample toggle stuff here!!! Sample toggle stuff here!!! Sample\n\t\t\t\t\t\t\ttoggle stuff here!!! Sample toggle stuff here!!! Sample toggle\n\t\t\t\t\t\t\tstuff here!!! Sample toggle stuff here!!! Sample toggle stuff\n\t\t\t\t\t\t\there!!! Sample toggle stuff here!!!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Collapsible>\n\t\t\t\t</Modal>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default GuidebookModal;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/ChooseCareer.js",["153"],"import React, { useState } from 'react';\nimport { ColumnFlex, H3, P, PrimaryButton, Select } from '../shared/global';\nimport axios from 'axios';\nimport careerData from './../careerData';\nimport styled from 'styled-components';\n\nconst CareerCard = styled.div`\n\tborder-radius: 5px;\n\tbackground-color: #4f73b6;\n\tcolor: #fff;\n\tpadding: 1rem;\n\tmargin: 1rem 0;\n`;\n\nconst ChooseCareer = (props) => {\n\tconst username = props.username;\n\tconst [chosenCareer, setChosenCareer] = useState();\n\tconst [chosenSalary, setChosenSalary] = useState();\n\n\tconst selectOptions = (value) => {\n\t\tcareerData\n\t\t\t.filter(({ careerName }) => careerName === value)\n\t\t\t.map((data) => {\n\t\t\t\tsetChosenCareer(data.careerName);\n\t\t\t\tsetChosenSalary(data.startingSalary);\n\t\t\t});\n\t};\n\n\tconst pickCareer = (e) => {\n\t\te.preventDefault();\n\n\t\tconst careerInfo = {\n\t\t\tcareerName: chosenCareer,\n\t\t\tstartingSalary: chosenSalary,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/users/setCareer/' + username,\n\t\t\t\tcareerInfo\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\talert('career added');\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<ColumnFlex>\n\t\t\t<Select\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tselectOptions(e.target.value);\n\t\t\t\t}}\n\t\t\t\tdefaultValue={`Select One`}>\n\t\t\t\t<option disabled>Select One</option>\n\t\t\t\t{careerData.map((data, index) => (\n\t\t\t\t\t<option key={index} value={data.careerName}>\n\t\t\t\t\t\t{data.careerName}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</Select>\n\n\t\t\t{chosenCareer != null ? (\n\t\t\t\t<CareerCard>\n\t\t\t\t\t<H3>{chosenCareer}</H3>\n\t\t\t\t\t<P className=\"dollar\">{chosenSalary}</P>\n\t\t\t\t</CareerCard>\n\t\t\t) : null}\n\n\t\t\t<PrimaryButton style={{ margin: '1rem 0' }} onClick={pickCareer}>\n\t\t\t\tPick Career\n\t\t\t</PrimaryButton>\n\t\t</ColumnFlex>\n\t);\n};\n\nexport default ChooseCareer;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/FinancialTracker.js",["154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport {\n\tFlexBetween,\n\tH3,\n\tH4,\n\tP,\n\tPrimaryButton,\n\tPrimaryButtonOutline,\n\tSmallOutlineButton,\n\tTextInput,\n} from './../shared/global';\n\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n`;\n\nconst CenteredRow = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n`;\n\nconst StyledTextInput = styled(TextInput)`\n\twidth: 150px;\n\tfont-size: 1rem;\n\tpadding: 0.25rem;\n\tmargin: 0 0.25rem;\n`;\n\nconst FinancialTracker = (props) => {\n\tconst username = props.username;\n\tconst roundCount = props.roundCount;\n\n\tconst [ready, setReady] = useState(false);\n\n\tconst salary = props.salary;\n\tconst [incomeDone, setIncomeDone] = useState(false);\n\tconst [expenseDone, setExpenseDone] = useState(false);\n\tconst [transferDone, setTransferDone] = useState(false);\n\n\tconst [totalIncome, setTotalIncome] = useState(0);\n\tconst [totalExpenses, setTotalExpenses] = useState(0);\n\n\tconst [incomeSource, setIncomeSource] = useState();\n\tconst [incomeAmount, setIncomeAmount] = useState(0);\n\tconst [expenseSource, setExpenseSource] = useState();\n\tconst [expenseAmount, setExpenseAmount] = useState(0);\n\n\tconst [incomeEntries, setIncomeEntries] = useState([{}]);\n\tconst [expenseEntries, setExpenseEntries] = useState([{}]);\n\n\tconst [chequingDeposit, setChequingDeposit] = useState(0);\n\tconst [savingsDeposit, setSavingsDeposit] = useState(0);\n\n\t// use effect, watch if round count changes\n\tuseEffect(() => {\n\t\tconsole.log('hey its a new round! ' + roundCount);\n\t\tsetReady(true);\n\n\t\tsetTotalIncome(salary);\n\t}, [roundCount]);\n\n\tuseEffect(() => {\n\t\tsetIncomeEntries([\n\t\t\t{\n\t\t\t\tsource: 'Salary 1',\n\t\t\t\tamount: Number(salary),\n\t\t\t},\n\t\t]);\n\n\t\tsetTotalIncome(salary);\n\t}, []);\n\n\tconst addIncome = () => {\n\t\tif (incomeAmount != null && incomeSource != null) {\n\t\t\tif (incomeAmount != '' && incomeSource != 'null') {\n\t\t\t\tsetIncomeEntries([\n\t\t\t\t\t...incomeEntries,\n\t\t\t\t\t{\n\t\t\t\t\t\tsource: incomeSource,\n\t\t\t\t\t\tamount: Number(incomeAmount),\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\tsetTotalIncome(+totalIncome + +incomeAmount);\n\t\t\t\tdocument.getElementById('incomeSource').value = '';\n\t\t\t\tdocument.getElementById('incomeAmount').value = '';\n\n\t\t\t\tsetIncomeSource('');\n\t\t\t\tsetIncomeAmount('');\n\t\t\t} else {\n\t\t\t\talert('enter an amount');\n\t\t\t}\n\t\t} else {\n\t\t\talert('enter an amount');\n\t\t}\n\t};\n\n\tconst addExpense = () => {\n\t\tif (expenseAmount != null && expenseSource != null) {\n\t\t\tif (expenseAmount != '' && expenseSource != 'null') {\n\t\t\t\tsetExpenseEntries([\n\t\t\t\t\t...expenseEntries,\n\t\t\t\t\t{\n\t\t\t\t\t\tsource: expenseSource,\n\t\t\t\t\t\tamount: Number(expenseAmount),\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\tsetTotalExpenses(+totalExpenses + +expenseAmount);\n\t\t\t\tdocument.getElementById('expenseSource').value = '';\n\t\t\t\tdocument.getElementById('expenseAmount').value = '';\n\n\t\t\t\tsetExpenseSource('');\n\t\t\t\tsetExpenseAmount('');\n\t\t\t} else {\n\t\t\t\talert('enter an amount');\n\t\t\t}\n\t\t} else {\n\t\t\talert('enter an amount');\n\t\t}\n\t};\n\n\tconst income = (\n\t\t<div>\n\t\t\t<FlexBetween>\n\t\t\t\t<H3>Enter all your income this month</H3>\n\t\t\t</FlexBetween>\n\n\t\t\t<span>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeSource\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Income Source\"\n\t\t\t\t\t\tonChange={(e) => setIncomeSource(e.target.value)}></StyledTextInput>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Income Amount\"\n\t\t\t\t\t\tonChange={(e) => setIncomeAmount(e.target.value)}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<CenteredRow>\n\t\t\t\t\t<SmallOutlineButton onClick={addIncome}>\n\t\t\t\t\t\tAdd income\n\t\t\t\t\t</SmallOutlineButton>\n\t\t\t\t</CenteredRow>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\t<H3>Income Entries</H3>\n\t\t\t\t{incomeEntries.map((data, index) =>\n\t\t\t\t\tindex >= 0 ? (\n\t\t\t\t\t\t<InputRow key={index}>\n\t\t\t\t\t\t\t<H3> {data.source}</H3>\n\t\t\t\t\t\t\t<P className=\"dollar\">{data.amount}</P>\n\t\t\t\t\t\t</InputRow>\n\t\t\t\t\t) : null\n\t\t\t\t)}\n\t\t\t\t<H3 style={{ textAlign: 'right' }}>Total income: ${totalIncome}</H3>\n\t\t\t</div>\n\n\t\t\t<CenteredRow>\n\t\t\t\t<PrimaryButton onClick={(e) => setIncomeDone(true)}>Next</PrimaryButton>\n\t\t\t</CenteredRow>\n\t\t</div>\n\t);\n\n\tconst expense = (\n\t\t<div>\n\t\t\t<FlexBetween>\n\t\t\t\t<H3>Enter all your expenses this month</H3>\n\t\t\t</FlexBetween>\n\n\t\t\t<span>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"expenseSource\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Expense Source\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetExpenseSource(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"expenseAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Expense Amount\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetExpenseAmount(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<CenteredRow>\n\t\t\t\t\t<SmallOutlineButton onClick={addExpense}>\n\t\t\t\t\t\tAdd expense\n\t\t\t\t\t</SmallOutlineButton>\n\t\t\t\t</CenteredRow>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\t<H3>Expense Entries</H3>\n\t\t\t\t{expenseEntries.map((data, index) =>\n\t\t\t\t\tindex > 0 ? (\n\t\t\t\t\t\t<InputRow key={index}>\n\t\t\t\t\t\t\t<H3> {data.source}</H3>\n\t\t\t\t\t\t\t<P className=\"dollar\">{data.amount}</P>\n\t\t\t\t\t\t</InputRow>\n\t\t\t\t\t) : null\n\t\t\t\t)}\n\t\t\t\t<H3 style={{ textAlign: 'right' }}>Total expenses: ${totalExpenses}</H3>\n\t\t\t</div>\n\n\t\t\t<CenteredRow>\n\t\t\t\t<PrimaryButton onClick={(e) => setExpenseDone(true)}>\n\t\t\t\t\tNext\n\t\t\t\t</PrimaryButton>\n\t\t\t</CenteredRow>\n\t\t</div>\n\t);\n\n\tconst finishTransfer = (e) => {\n\t\tsetTransferDone(true);\n\n\t\te.preventDefault();\n\t\tconst total =\n\t\t\ttotalIncome - totalExpenses - chequingDeposit - savingsDeposit;\n\n\t\tconst bankDeposit = {\n\t\t\tchequingDeposit: chequingDeposit,\n\t\t\tsavingsDeposit: savingsDeposit,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/users/bankAccount/' + username,\n\t\t\t\tbankDeposit\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\talert('deposits added');\n\t\t\t});\n\n\t\tif (total === 0) {\n\t\t\tsetIncomeDone(false);\n\t\t\tsetExpenseDone(false);\n\t\t\tsetTransferDone(false);\n\t\t\tsetTotalIncome(salary);\n\t\t\tsetTotalExpenses(0);\n\t\t\tsetChequingDeposit(0);\n\t\t\tsetSavingsDeposit(0);\n\t\t\tsetReady(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\talert('please make sure that total left to transfer is 0');\n\t\t}\n\t};\n\n\tconst transfer = (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<H3>Monthly Summary</H3>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Total Income</H3>\n\t\t\t\t\t<P className=\"dollar\">{totalIncome}</P>\n\t\t\t\t</InputRow>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Total Expenses</H3>\n\t\t\t\t\t<P className=\"dollar\">{totalExpenses}</P>\n\t\t\t\t</InputRow>\n\n\t\t\t\t<H3>Total amount to transfer: ${totalIncome - totalExpenses}</H3>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<P>Enter amount desired to transfer into each account</P>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Chequing</H3>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"chequingDeposit\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Chequing\"\n\t\t\t\t\t\tvalue={chequingDeposit}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetChequingDeposit(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Savings</H3>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"savingsDeposit\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Savings\"\n\t\t\t\t\t\tvalue={savingsDeposit}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetSavingsDeposit(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<span style={{ textAlign: 'right' }}>\n\t\t\t\t\t{totalIncome - totalExpenses - chequingDeposit - savingsDeposit ===\n\t\t\t\t\t0 ? (\n\t\t\t\t\t\t<P>You've transferred it all!</P>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<P style={{ color: 'red' }}>\n\t\t\t\t\t\t\tAmount left: $\n\t\t\t\t\t\t\t{totalIncome - totalExpenses - chequingDeposit - savingsDeposit}\n\t\t\t\t\t\t</P>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<H3>Total Transferred: ${+chequingDeposit + +savingsDeposit}</H3>\n\n\t\t\t\t\t<PrimaryButton onClick={finishTransfer}>Next</PrimaryButton>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{ready === true ? (\n\t\t\t\tincomeDone === false ? (\n\t\t\t\t\tincome\n\t\t\t\t) : expenseDone === false ? (\n\t\t\t\t\texpense\n\t\t\t\t) : transferDone === false ? (\n\t\t\t\t\ttransfer\n\t\t\t\t) : null\n\t\t\t) : (\n\t\t\t\t<div>Waiting for next round</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default FinancialTracker;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/WorldEvents.js",["162"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, HeadingImg, H1 } from '../shared/global';\nimport worldEventsData from '../worldEventsData';\n\nimport News from './../assets/Icon/News.png';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 2rem;\n\ttransition: 2s;\n\tbackground-color: #ecf1f7;\n\tcolor: #4f73b6;\n\tpadding: 1rem;\n\tborder-radius: 5px;\n\tmargin: 1rem 0;\n`;\n\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #eee 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nconst Label = styled.h3`\n\tcolor: #666;\n\tmargin: 1rem 0;\n`;\n\nlet newWorldEventsData;\n\nconst shuffle = () => {\n\tlet array = worldEventsData;\n\n\t// stackoverflow code\n\tvar currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\tnewWorldEventsData = array;\n};\n\nshuffle();\n\nconst WorldEvents = (props) => {\n\t// TODO: randomize order of world events\n\n\treturn (\n\t\t<Container>\n\t\t\t<CardHeading>\n\t\t\t\t<HeadingImg src={News}></HeadingImg>\n\t\t\t\t<H1>World Events</H1>\n\t\t\t</CardHeading>\n\t\t\t<Label>Latest</Label>\n\t\t\t{props.roundCounter > 1\n\t\t\t\t? newWorldEventsData.map((data, index) =>\n\t\t\t\t\t\tindex === props.roundCounter ? (\n\t\t\t\t\t\t\t<CurrentNewsContainer key={index}>\n\t\t\t\t\t\t\t\t{data.text}\n\t\t\t\t\t\t\t</CurrentNewsContainer>\n\t\t\t\t\t\t) : null\n\t\t\t\t  )\n\t\t\t\t: null}\n\n\t\t\t<Label>Past</Label>\n\t\t\t<PastEventsContainer>\n\t\t\t\t{props.roundCounter > 1\n\t\t\t\t\t? newWorldEventsData\n\t\t\t\t\t\t\t.slice(2, props.roundCounter)\n\t\t\t\t\t\t\t.map((data, index) => (\n\t\t\t\t\t\t\t\t<EventCard key={index}>{data.text}</EventCard>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t: null}\n\t\t\t</PastEventsContainer>\n\t\t</Container>\n\t);\n};\n\nexport default WorldEvents;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/SetFinancialGoal.js",["163"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport financialGoalData from './../financialGoalData';\nimport { PrimaryButton, TextInput, H4, ColumnFlex, P } from '../shared/global';\n\nconst GoalRow = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem 1rem;\n\tmargin: 0.25rem 0;\n\tbackground-color: #fff;\n\twidth: 200px;\n`;\n\nconst SetFinancialGoal = (props) => {\n\tconst username = props.username;\n\n\tconst [financialGoal, setFinancialGoal] = useState();\n\tconst [firstCheckpoint, setFirstCheckpoint] = useState(0);\n\tconst [secondCheckpoint, setSecondCheckpoint] = useState(0);\n\tconst [goalCheckpoint, setGoalCheckpoint] = useState(0);\n\n\tconst findGoal = (value) => {\n\t\tfinancialGoalData\n\t\t\t.filter(({ code }) => code === value)\n\t\t\t.map((data) => {\n\t\t\t\tsetFinancialGoal(data.goal);\n\t\t\t\tsetFirstCheckpoint(data.firstCheckpoint);\n\t\t\t\tsetSecondCheckpoint(data.secondCheckpoint);\n\t\t\t\tsetGoalCheckpoint(data.goalCheckpoint);\n\t\t\t});\n\t};\n\n\tconst setGoal = (e) => {\n\t\te.preventDefault();\n\n\t\tconst goalInfo = {\n\t\t\tfinancialGoal: financialGoal,\n\t\t\tfirstCheckpoint: firstCheckpoint,\n\t\t\tsecondCheckpoint: secondCheckpoint,\n\t\t\tgoalCheckpoint: goalCheckpoint,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://the-price-of-life.herokuapp.com/users/setFinancialGoal/' +\n\t\t\t\t\tusername,\n\t\t\t\tgoalInfo\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\talert('goal added');\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<ColumnFlex>\n\t\t\t<P>Type the code exactly as you see it</P>\n\t\t\t<TextInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tonChange={(e) => findGoal(e.target.value)}></TextInput>\n\n\t\t\t<span style={{ margin: '2rem 0' }}>\n\t\t\t\t<GoalRow style={{ backgroundColor: '#FEF9E6' }}>\n\t\t\t\t\t<H4>{financialGoal}</H4>\n\t\t\t\t\t<P className=\"dollar\">{goalCheckpoint}</P>\n\t\t\t\t</GoalRow>\n\t\t\t\t<GoalRow>\n\t\t\t\t\t<H4>Checkpoint 1</H4>\n\t\t\t\t\t<P className=\"dollar\">{firstCheckpoint}</P>\n\t\t\t\t</GoalRow>\n\t\t\t\t<GoalRow>\n\t\t\t\t\t<H4>Checkpoint 2</H4>\n\t\t\t\t\t<P className=\"dollar\">{secondCheckpoint}</P>\n\t\t\t\t</GoalRow>\n\t\t\t</span>\n\n\t\t\t<PrimaryButton onClick={setGoal}>Set Goal</PrimaryButton>\n\t\t</ColumnFlex>\n\t);\n};\n\nexport default SetFinancialGoal;\n","/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/components/GlossarySearch.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/stockMarketData.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/worldEventsData.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/financialGoalData.js",[],"/Users/roneillabumanlag/GitHub/IXDS2-Project/frontend/src/careerData.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":19,"nodeType":"170","messageId":"171","endLine":2,"endColumn":25},{"ruleId":"168","severity":1,"message":"172","line":13,"column":8,"nodeType":"170","messageId":"171","endLine":13,"endColumn":14},{"ruleId":"168","severity":1,"message":"173","line":9,"column":2,"nodeType":"170","messageId":"171","endLine":9,"endColumn":13},{"ruleId":"168","severity":1,"message":"174","line":48,"column":9,"nodeType":"170","messageId":"171","endLine":48,"endColumn":22},{"ruleId":"168","severity":1,"message":"175","line":48,"column":24,"nodeType":"170","messageId":"171","endLine":48,"endColumn":40},{"ruleId":"176","severity":1,"message":"177","line":166,"column":9,"nodeType":"178","endLine":166,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":180,"column":9,"nodeType":"178","endLine":180,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":106,"column":5,"nodeType":"181","endLine":106,"endColumn":7,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"183","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"184","line":159,"column":9,"nodeType":"170","messageId":"171","endLine":159,"endColumn":19},{"ruleId":"179","severity":1,"message":"185","line":185,"column":21,"nodeType":"170","endLine":185,"endColumn":29},{"ruleId":"179","severity":1,"message":"186","line":186,"column":23,"nodeType":"170","endLine":186,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":215,"column":5,"nodeType":"181","endLine":215,"endColumn":7,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"189","line":239,"column":5,"nodeType":"181","endLine":239,"endColumn":7,"suggestions":"190"},{"ruleId":"168","severity":1,"message":"183","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"191","line":3,"column":39,"nodeType":"170","messageId":"171","endLine":3,"endColumn":40},{"ruleId":"179","severity":1,"message":"192","line":65,"column":5,"nodeType":"181","endLine":65,"endColumn":7,"suggestions":"193"},{"ruleId":"168","severity":1,"message":"194","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"191","line":8,"column":2,"nodeType":"170","messageId":"171","endLine":8,"endColumn":3},{"ruleId":"168","severity":1,"message":"195","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":23,"column":16,"nodeType":"198","messageId":"199","endLine":23,"endColumn":18},{"ruleId":"168","severity":1,"message":"200","line":8,"column":2,"nodeType":"170","messageId":"171","endLine":8,"endColumn":4},{"ruleId":"168","severity":1,"message":"201","line":11,"column":2,"nodeType":"170","messageId":"171","endLine":11,"endColumn":22},{"ruleId":"179","severity":1,"message":"202","line":71,"column":5,"nodeType":"181","endLine":71,"endColumn":17,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"202","line":82,"column":5,"nodeType":"181","endLine":82,"endColumn":7,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":86,"column":21,"nodeType":"207","messageId":"208","endLine":86,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":86,"column":43,"nodeType":"207","messageId":"208","endLine":86,"endColumn":45},{"ruleId":"205","severity":1,"message":"206","line":111,"column":22,"nodeType":"207","messageId":"208","endLine":111,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":111,"column":45,"nodeType":"207","messageId":"208","endLine":111,"endColumn":47},{"ruleId":"168","severity":1,"message":"194","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"197","line":29,"column":16,"nodeType":"198","messageId":"199","endLine":29,"endColumn":18},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'FlexBetween' is defined but never used.","'newPopulation' is assigned a value but never used.","'setNewPopulation' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.search' and 'roundCount'. Either include them or remove the dependency array.","ArrayExpression",["211"],"'styled' is defined but never used.","'myNetWorth' is assigned a value but never used.","Assignments to the 'currentUsername' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'currentServerName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'currentUsername'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'currentServerName' and 'currentUsername'. Either include them or remove the dependency array.",["213"],"'P' is defined but never used.","React Hook useEffect has missing dependencies: 'growth' and 'props.startingPrice'. Either include them or remove the dependency array. If 'setStockPrice' needs the current value of 'props.startingPrice', you can also switch to useReducer instead of useState and read 'props.startingPrice' in the reducer.",["214"],"'useEffect' is defined but never used.","'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'H4' is defined but never used.","'PrimaryButtonOutline' is defined but never used.","React Hook useEffect has a missing dependency: 'salary'. Either include it or remove the dependency array.",["215"],["216"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [location.search, roundCount]",{"range":"229","text":"230"},"Update the dependencies array to be: [currentUsername]",{"range":"231","text":"232"},"Update the dependencies array to be: [currentServerName, currentUsername]",{"range":"233","text":"234"},"Update the dependencies array to be: [growth, props.startingPrice]",{"range":"235","text":"236"},"Update the dependencies array to be: [roundCount, salary]",{"range":"237","text":"238"},"Update the dependencies array to be: [salary]",{"range":"239","text":"240"},[2258,2260],"[location.search, roundCount]",[5155,5157],"[currentUsername]",[5765,5767],"[currentServerName, currentUsername]",[1409,1411],"[growth, props.startingPrice]",[1768,1780],"[roundCount, salary]",[1924,1926],"[salary]"]