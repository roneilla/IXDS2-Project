{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../shared/global';\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  props,\n  location\n}) => {\n  _s();\n\n  // const socket = props.socket;\n  const [username, setUsername] = useState('');\n  const [servername, setServername] = useState('');\n  const [roundCounter, setRoundCounter] = useState(0);\n  const MINUTE_MS = 100;\n  useEffect(() => {\n    const {\n      username,\n      servername\n    } = queryString.parse(location.search);\n    setUsername(username);\n    setServername(servername);\n  }, [location.search]);\n\n  const updateRoundCounter = () => {\n    axios.get('http://localhost:5000/serverRoom/currentRound/' + servername).then(res => {\n      console.log(res.data);\n      setRoundCounter(res.data.roundcounter);\n    });\n  };\n\n  setInterval(() => {\n    updateRoundCounter();\n  }, MINUTE_MS);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: servername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: roundCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Player, \"S6d0RJ8BKzg26vAc86ourZ8vZX8=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Player.js"],"names":["React","useState","useEffect","styled","Container","queryString","axios","Player","props","location","username","setUsername","servername","setServername","roundCounter","setRoundCounter","MINUTE_MS","parse","search","updateRoundCounter","get","then","res","console","log","data","roundcounter","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACvC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAMe,SAAS,GAAG,GAAlB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM;AAAEQ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2BP,WAAW,CAACY,KAAZ,CAAkBR,QAAQ,CAACS,MAA3B,CAAjC;AAEAP,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,aAAa,CAACD,UAAD,CAAb;AACA,GALQ,EAKN,CAACH,QAAQ,CAACS,MAAV,CALM,CAAT;;AAOA,QAAMC,kBAAkB,GAAG,MAAM;AAChCb,IAAAA,KAAK,CACHc,GADF,CACM,mDAAmDR,UADzD,EAEES,IAFF,CAEQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAV,MAAAA,eAAe,CAACO,GAAG,CAACG,IAAJ,CAASC,YAAV,CAAf;AACA,KALF;AAMA,GAPD;;AAQAC,EAAAA,WAAW,CAAC,MAAM;AACjBR,IAAAA,kBAAkB;AAClB,GAFU,EAERH,SAFQ,CAAX;AAIA,sBACC,QAAC,SAAD;AAAA,4BACC;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAlCD;;GAAMP,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../shared/global';\n\nimport queryString from 'query-string';\n\nimport axios from 'axios';\n\nconst Player = ({ props, location }) => {\n\t// const socket = props.socket;\n\tconst [username, setUsername] = useState('');\n\tconst [servername, setServername] = useState('');\n\tconst [roundCounter, setRoundCounter] = useState(0);\n\n\tconst MINUTE_MS = 100;\n\n\tuseEffect(() => {\n\t\tconst { username, servername } = queryString.parse(location.search);\n\n\t\tsetUsername(username);\n\t\tsetServername(servername);\n\t}, [location.search]);\n\n\tconst updateRoundCounter = () => {\n\t\taxios\n\t\t\t.get('http://localhost:5000/serverRoom/currentRound/' + servername)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetRoundCounter(res.data.roundcounter);\n\t\t\t});\n\t};\n\tsetInterval(() => {\n\t\tupdateRoundCounter();\n\t}, MINUTE_MS);\n\n\treturn (\n\t\t<Container>\n\t\t\t<div>{servername}</div>\n\t\t\t<div>{username}</div>\n\t\t\t<div>{roundCounter}</div>\n\t\t</Container>\n\t);\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}