{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/GlossarySearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #ccc solid 1px;\n\tborder-radius: 5px;\n\twidth: 100%\n`;\n_c = StyledSearchBar;\n\nconst GlossarySearch = props => {\n  _s();\n\n  const [filterTerm, setFilterTerm] = useState(); // const filterGlossary = glossaryItem.filter((item) => {\n  // \treturn Object.keys(item).some((key) =>\n  // \t\titem[key].toLowerCase().includes(lowercasedFilter)\n  // \t);\n  // });\n\n  const glossaryItem = glossary.filter(({\n    term\n  }) => term === filterTerm).map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, data.term, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 4\n  }, this));\n  console.log(glossaryItem);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledSearchBar, {\n      value: filterTerm,\n      placeholder: \"Search for Terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), glossaryItem]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GlossarySearch, \"5PkGlq4WKHHMLYFJjZITUBfs/6E=\");\n\n_c2 = GlossarySearch;\nexport default GlossarySearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSearchBar\");\n$RefreshReg$(_c2, \"GlossarySearch\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/GlossarySearch.js"],"names":["React","useState","useEffect","styled","glossary","StyledSearchBar","input","GlossarySearch","props","filterTerm","setFilterTerm","glossaryItem","filter","term","map","data","definition","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,KAAM;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,e;;AAQN,MAAME,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C,CADiC,CAEjC;AACA;AACA;AACA;AACA;;AAEA,QAAMU,YAAY,GAAGP,QAAQ,CAC3BQ,MADmB,CACZ,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKJ,UADX,EAEnBK,GAFmB,CAEdC,IAAD,iBACJ;AAAA,4BACC;AAAA,gBAAKA,IAAI,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIE,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAUD,IAAI,CAACF,IAAf;AAAA;AAAA;AAAA;AAAA,UAHmB,CAArB;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEA,sBACC;AAAA,4BACC,QAAC,eAAD;AACC,MAAA,KAAK,EAAEF,UADR;AAEC,MAAA,WAAW,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,YADD,EAIEE,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CA3BD;;GAAMJ,c;;MAAAA,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\n\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #ccc solid 1px;\n\tborder-radius: 5px;\n\twidth: 100%\n`;\n\nconst GlossarySearch = (props) => {\n\tconst [filterTerm, setFilterTerm] = useState();\n\t// const filterGlossary = glossaryItem.filter((item) => {\n\t// \treturn Object.keys(item).some((key) =>\n\t// \t\titem[key].toLowerCase().includes(lowercasedFilter)\n\t// \t);\n\t// });\n\n\tconst glossaryItem = glossary\n\t\t.filter(({ term }) => term === filterTerm)\n\t\t.map((data) => (\n\t\t\t<div key={data.term}>\n\t\t\t\t<h1>{data.term}</h1>\n\t\t\t\t<p>{data.definition}</p>\n\t\t\t</div>\n\t\t));\n\n\tconsole.log(glossaryItem);\n\n\treturn (\n\t\t<div>\n\t\t\t<StyledSearchBar\n\t\t\t\tvalue={filterTerm}\n\t\t\t\tplaceholder=\"Search for Terms\"></StyledSearchBar>\n\t\t\t{glossaryItem}\n\t\t</div>\n\t);\n};\n\nexport default GlossarySearch;\n"]},"metadata":{},"sourceType":"module"}