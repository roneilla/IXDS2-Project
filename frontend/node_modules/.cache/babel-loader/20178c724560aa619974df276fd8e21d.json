{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n_c2 = PastEventsContainer;\nlet newWorldEventsData;\nlet shuffledWorldEvents;\n\nconst shuffle = () => {\n  array = worldEventsData; // stackoverflow code\n\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  newWorldEventsData = shuffledWorldEvents;\n};\n\nconst WorldEvents = props => {\n  // TODO: randomize order of world events\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"World Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), console.log(), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PastEventsContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = WorldEvents;\nexport default WorldEvents;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PastEventsContainer\");\n$RefreshReg$(_c3, \"WorldEvents\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js"],"names":["React","useEffect","styled","worldEventsData","Container","div","CurrentNewsContainer","EventCard","PastEventsContainer","newWorldEventsData","shuffledWorldEvents","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","WorldEvents","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA,CAHA;KAAMD,S;AAKN,MAAME,oBAAoB,GAAGJ,MAAM,CAACG,GAAI;AACxC;AACA;AACA,CAHA;AAKA,MAAME,SAAS,GAAGL,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMG,mBAAmB,GAAGN,MAAM,CAACG,GAAI;AACvC;AACA;AACA,CAHA;MAAMG,mB;AAIN,IAAIC,kBAAJ;AACA,IAAIC,mBAAJ;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrBC,EAAAA,KAAK,GAAGT,eAAR,CADqB,CAGrB;;AACA,MAAIU,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACCC,cADD;AAAA,MAECC,WAFD,CAJqB,CAQrB;;AACA,SAAO,MAAMH,YAAb,EAA2B;AAC1B;AACAG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB,CAH0B,CAK1B;;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACA;;AAEDN,EAAAA,kBAAkB,GAAGC,mBAArB;AACA,CArBD;;AAuBA,MAAMU,WAAW,GAAIC,KAAD,IAAW;AAC9B;AAEA,sBACC,QAAC,SAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEC,OAAO,CAACC,GAAR,EAHF,eAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD,eAgBC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CA/BD;;MAAMH,W;AAiCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\n\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\nlet newWorldEventsData;\nlet shuffledWorldEvents;\n\nconst shuffle = () => {\n\tarray = worldEventsData;\n\n\t// stackoverflow code\n\tvar currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\tnewWorldEventsData = shuffledWorldEvents;\n};\n\nconst WorldEvents = (props) => {\n\t// TODO: randomize order of world events\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>World Events</h1>\n\t\t\t<h2>Latest</h2>\n\t\t\t{console.log()}\n\t\t\t{/* {props.roundCounter > 1\n\t\t\t\t? newWorldEventsData.map((data, index) =>\n\t\t\t\t\t\tindex === props.roundCounter ? (\n\t\t\t\t\t\t\t<CurrentNewsContainer key={index}>\n\t\t\t\t\t\t\t\t{data.text}\n\t\t\t\t\t\t\t</CurrentNewsContainer>\n\t\t\t\t\t\t) : null\n\t\t\t\t  )\n\t\t\t\t: null}\n\n\t\t */}\n\t\t\t<h2>Past</h2>\n\t\t\t<PastEventsContainer>\n\t\t\t\t{/* {props.roundCounter > 1\n\t\t\t\t\t? newWorldEventsData\n\t\t\t\t\t\t\t.slice(2, props.roundCounter)\n\t\t\t\t\t\t\t.map((data, index) => (\n\t\t\t\t\t\t\t\t<EventCard key={index}>{data.text}</EventCard>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t: null} */}\n\t\t\t</PastEventsContainer>\n\t\t</Container>\n\t);\n};\n\nexport default WorldEvents;\n"]},"metadata":{},"sourceType":"module"}