{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/GlossaryPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\nimport { Container } from './../shared/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #333 solid 1px;\n\tposition: relative;\n\twidth: 100%;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n`;\n_c = StyledSearchBar;\nconst Header = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tmargin-bottom: 1rem;\n\tpadding: 1rem 0;\n`;\n_c2 = Header;\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n_c3 = Wrapper;\nconst GlossaryCard = styled.div`\n\twidth: 100%;\n\tmax-width: 1000px;\n\tpadding: 1rem;\n\tmargin: 0.5rem 0;\n\tborder: 1px solid #333;\n\tbackground-color: white;\n`;\n_c4 = GlossaryCard;\n\nconst GlossaryPage = props => {\n  _s();\n\n  const [filterTerm, setFilterTerm] = useState('');\n  const allGlossaryItems = glossary.map(data => /*#__PURE__*/_jsxDEV(GlossaryCard, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, data.term, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this));\n  const glossaryItem = glossary.filter(({\n    term\n  }) => term === filterTerm.toLowerCase()).map(data => /*#__PURE__*/_jsxDEV(GlossaryCard, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, data.term, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 4\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: '1rem 0'\n        },\n        children: \"Glossary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchBar, {\n        value: filterTerm,\n        placeholder: \"Search for Terms\",\n        onChange: e => {\n          setFilterTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: filterTerm !== '' ? glossaryItem : allGlossaryItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GlossaryPage, \"FlKUzDNpEN/aeVPTCFIhGlzwrrk=\");\n\n_c5 = GlossaryPage;\nexport default GlossaryPage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledSearchBar\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"GlossaryCard\");\n$RefreshReg$(_c5, \"GlossaryPage\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/GlossaryPage.js"],"names":["React","useState","styled","glossary","Container","StyledSearchBar","input","Header","div","Wrapper","GlossaryCard","GlossaryPage","props","filterTerm","setFilterTerm","allGlossaryItems","map","data","term","definition","glossaryItem","filter","toLowerCase","margin","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,KAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,e;AAUN,MAAME,MAAM,GAAGL,MAAM,CAACM,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAON,MAAME,OAAO,GAAGP,MAAM,CAACM,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMC,O;AAMN,MAAMC,YAAY,GAAGR,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,Y;;AASN,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMc,gBAAgB,GAAGZ,QAAQ,CAACa,GAAT,CAAcC,IAAD,iBACrC,QAAC,YAAD;AAAA,4BACC;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAmBF,IAAI,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA,UADwB,CAAzB;AAOA,QAAME,YAAY,GAAGjB,QAAQ,CAC3BkB,MADmB,CACZ,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKL,UAAU,CAACS,WAAX,EADX,EAEnBN,GAFmB,CAEdC,IAAD,iBACJ,QAAC,YAAD;AAAA,4BACC;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAmBF,IAAI,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA,UAHmB,CAArB;AAQA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAA,8BACC;AAAI,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,eAAD;AACC,QAAA,KAAK,EAAEV,UADR;AAEC,QAAA,WAAW,EAAC,kBAFb;AAGC,QAAA,QAAQ,EAAGW,CAAD,IAAO;AAChBV,UAAAA,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA;AALF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAWC,QAAC,SAAD;AAAA,6BACC,QAAC,OAAD;AAAA,kBAAUb,UAAU,KAAK,EAAf,GAAoBO,YAApB,GAAmCL;AAA7C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA,kBADD;AAiBA,CAnCD;;GAAMJ,Y;;MAAAA,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\n\nimport { Container } from './../shared/global';\n\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #333 solid 1px;\n\tposition: relative;\n\twidth: 100%;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n`;\n\nconst Header = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tmargin-bottom: 1rem;\n\tpadding: 1rem 0;\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst GlossaryCard = styled.div`\n\twidth: 100%;\n\tmax-width: 1000px;\n\tpadding: 1rem;\n\tmargin: 0.5rem 0;\n\tborder: 1px solid #333;\n\tbackground-color: white;\n`;\n\nconst GlossaryPage = (props) => {\n\tconst [filterTerm, setFilterTerm] = useState('');\n\n\tconst allGlossaryItems = glossary.map((data) => (\n\t\t<GlossaryCard key={data.term}>\n\t\t\t<h1>{data.term}</h1>\n\t\t\t<p>{data.definition}</p>\n\t\t</GlossaryCard>\n\t));\n\n\tconst glossaryItem = glossary\n\t\t.filter(({ term }) => term === filterTerm.toLowerCase())\n\t\t.map((data) => (\n\t\t\t<GlossaryCard key={data.term}>\n\t\t\t\t<h1>{data.term}</h1>\n\t\t\t\t<p>{data.definition}</p>\n\t\t\t</GlossaryCard>\n\t\t));\n\treturn (\n\t\t<>\n\t\t\t<Header>\n\t\t\t\t<h1 style={{ margin: '1rem 0' }}>Glossary</h1>\n\t\t\t\t<StyledSearchBar\n\t\t\t\t\tvalue={filterTerm}\n\t\t\t\t\tplaceholder=\"Search for Terms\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetFilterTerm(e.target.value);\n\t\t\t\t\t}}></StyledSearchBar>\n\t\t\t</Header>\n\n\t\t\t<Container>\n\t\t\t\t<Wrapper>{filterTerm !== '' ? glossaryItem : allGlossaryItems}</Wrapper>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default GlossaryPage;\n"]},"metadata":{},"sourceType":"module"}