{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FinancialTracker = props => {\n  _s();\n\n  const username = props.username;\n  const roundCount = props.roundCount;\n  const [ready, setReady] = useState();\n  const [salary, setSalary] = useState(5000);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [totalLeft, setTotalLeft] = useState(0);\n  const [incomeSource, setIncomeSource] = useState();\n  const [incomeAmount, setIncomeAmount] = useState(0);\n  const currentIncome = [];\n  const currentExpenses = []; // use effect, watch if round count changes\n\n  useEffect(() => {\n    console.log('hey its a new round');\n  }, [roundCount]);\n\n  const expenses = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter all your expenses this month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Expense Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n\n  const addIncome = () => {\n    currentIncome.push({\n      source: incomeS,\n      amount: incomeV\n    });\n    console.log(currentIncome);\n  };\n\n  const income = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter all your income this month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: salary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"additional expenses. type the source and amount and click the button to add it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Income Source\",\n          onChange: e => setIncomeSource(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Income Amount\",\n          onChange: e => setIncomeAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addIncome,\n          children: \"Add income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"All income:\", currentIncome.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", data.incomeSource]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.incomeAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"new payday!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), income]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FinancialTracker, \"t9Cxw5qoJh8nhwKXex5sGRtWKUw=\");\n\n_c = FinancialTracker;\nexport default FinancialTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinancialTracker\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js"],"names":["React","useState","useEffect","axios","FinancialTracker","props","username","roundCount","ready","setReady","salary","setSalary","totalIncome","setTotalIncome","totalExpenses","setTotalExpenses","totalLeft","setTotalLeft","incomeSource","setIncomeSource","incomeAmount","setIncomeAmount","currentIncome","currentExpenses","console","log","expenses","addIncome","push","source","incomeS","amount","incomeV","income","e","target","value","map","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,EAAhD;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAMqB,aAAa,GAAG,EAAtB;AACA,QAAMC,eAAe,GAAG,EAAxB,CAdmC,CAgBnC;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACfsB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,GAFQ,EAEN,CAAClB,UAAD,CAFM,CAAT;;AAIA,QAAMmB,QAAQ,gBACb;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAUA,QAAMC,SAAS,GAAG,MAAM;AACvBL,IAAAA,aAAa,CAACM,IAAd,CAAmB;AAClBC,MAAAA,MAAM,EAAEC,OADU;AAElBC,MAAAA,MAAM,EAAEC;AAFU,KAAnB;AAIAR,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACA,GAND;;AAQA,QAAMW,MAAM,gBACX;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAIvB;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAMC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAA,gCACC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,eAFb;AAGC,UAAA,QAAQ,EAAGwB,CAAD,IAAOf,eAAe,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,gBADD,eAKC;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,WAAW,EAAC,eAFb;AAGC,UAAA,QAAQ,EAAGF,CAAD,IAAOb,eAAe,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,gBALD,eASC;AAAQ,UAAA,OAAO,EAAET,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,eAwBC;AAAA,gCAEEL,aAAa,CAACe,GAAd,CAAmBC,IAAD,iBAClB;AAAA,gCACC;AAAA,0BAAMA,IAAI,CAACpB,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAIoB,IAAI,CAAClB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAqCA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEa,MAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAlFD;;GAAM7B,gB;;KAAAA,gB;AAoFN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst FinancialTracker = (props) => {\n\tconst username = props.username;\n\tconst roundCount = props.roundCount;\n\tconst [ready, setReady] = useState();\n\n\tconst [salary, setSalary] = useState(5000);\n\tconst [totalIncome, setTotalIncome] = useState(0);\n\tconst [totalExpenses, setTotalExpenses] = useState(0);\n\tconst [totalLeft, setTotalLeft] = useState(0);\n\n\tconst [incomeSource, setIncomeSource] = useState();\n\tconst [incomeAmount, setIncomeAmount] = useState(0);\n\n\tconst currentIncome = [];\n\tconst currentExpenses = [];\n\n\t// use effect, watch if round count changes\n\tuseEffect(() => {\n\t\tconsole.log('hey its a new round');\n\t}, [roundCount]);\n\n\tconst expenses = (\n\t\t<div>\n\t\t\t<h2>Enter all your expenses this month</h2>\n\t\t\t<div>\n\t\t\t\t<h2>expenses</h2>\n\t\t\t\t<input type=\"number\" placeholder=\"Expense Here\"></input>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst addIncome = () => {\n\t\tcurrentIncome.push({\n\t\t\tsource: incomeS,\n\t\t\tamount: incomeV,\n\t\t});\n\t\tconsole.log(currentIncome);\n\t};\n\n\tconst income = (\n\t\t<div>\n\t\t\t<h2>Enter all your income this month</h2>\n\t\t\t<span>\n\t\t\t\t<p>Salary</p>\n\t\t\t\t<p>{salary}</p>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t<p>\n\t\t\t\t\tadditional expenses. type the source and amount and click the button\n\t\t\t\t\tto add it.\n\t\t\t\t</p>\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Income Source\"\n\t\t\t\t\t\tonChange={(e) => setIncomeSource(e.target.value)}></input>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Income Amount\"\n\t\t\t\t\t\tonChange={(e) => setIncomeAmount(e.target.value)}></input>\n\t\t\t\t\t<button onClick={addIncome}>Add income</button>\n\t\t\t\t</span>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\tAll income:\n\t\t\t\t{currentIncome.map((data) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3> {data.incomeSource}</h3>\n\t\t\t\t\t\t<p>{data.incomeAmount}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>new payday!</h1>\n\t\t\t{income}\n\t\t</div>\n\t);\n};\n\nexport default FinancialTracker;\n"]},"metadata":{},"sourceType":"module"}