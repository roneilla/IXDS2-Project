{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/StockMarket.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { P } from '../shared/global';\nimport stockMarketData from './../stockMarketData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n_c2 = StockCardContainer;\n\nconst StockArrows = props => {\n  _s();\n\n  const hasVal1Changed = useHasChanged(val1);\n  useEffect(() => {\n    if (hasVal1Changed) {\n      console.log('val1 has changed');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StockArrows, \"mL0zusYhJZnntSsD8VQxnZFBTGU=\", false, function () {\n  return [useHasChanged];\n});\n\n_c3 = StockArrows;\n\nconst StockCard = props => {\n  _s2();\n\n  const [stockPrice, setStockPrice] = useState(0);\n  let currentPrice, lastPrice;\n  const MINUTE_MS = 1000; // 5 minutes\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStockPrice(Math.floor(Math.random(props.startPrice, props.startPrice + props.priceRange) * 1000));\n      console.log('Logs every minute');\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, []); // const updateArrow = () => {\n  // \tstockPrice > lastPrice ? <div>arrow up</div> : <div>arrow down</div>;\n  // \tlastPrice = stockPrice;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(StockCardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.stockTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.stockName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: stockPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(StockCard, \"jvKEDnyiJ+MFu9b1eSF0mcBktZM=\");\n\n_c4 = StockCard;\n\nconst useHasChanged = val => {\n  _s3();\n\n  const prevVal = usePrevious(val);\n  return prevVal !== val;\n};\n\n_s3(useHasChanged, \"HoNKRQGo64iDpoe4UBQ72tkFRV0=\", false, function () {\n  return [usePrevious];\n});\n\nconst usePrevious = value => {\n  _s4();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\n_s4(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nconst StockMarket = () => {\n  const stocks = stockMarketData.map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n    stockTicker: stock.ticker,\n    stockName: stock.stockName,\n    currentPrice: stock.startingPrice,\n    priceRange: stock.priceRange\n  }, stock.ticker, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), stocks]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = StockMarket;\nexport default StockMarket;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StockCardContainer\");\n$RefreshReg$(_c3, \"StockArrows\");\n$RefreshReg$(_c4, \"StockCard\");\n$RefreshReg$(_c5, \"StockMarket\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/StockMarket.js"],"names":["React","useState","useEffect","styled","P","stockMarketData","Container","div","StockCardContainer","StockArrows","props","hasVal1Changed","useHasChanged","val1","console","log","StockCard","stockPrice","setStockPrice","currentPrice","lastPrice","MINUTE_MS","interval","setInterval","Math","floor","random","startPrice","priceRange","clearInterval","stockTicker","stockName","val","prevVal","usePrevious","value","ref","useRef","current","StockMarket","stocks","map","stock","ticker","startingPrice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { P } from '../shared/global';\nimport stockMarketData from './../stockMarketData';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n\nconst StockArrows = (props) => {\n\tconst hasVal1Changed = useHasChanged(val1);\n\n\tuseEffect(() => {\n\t\tif (hasVal1Changed) {\n\t\t\tconsole.log('val1 has changed');\n\t\t}\n\t});\n\n\treturn <div>...</div>;\n};\n\nconst StockCard = (props) => {\n\tconst [stockPrice, setStockPrice] = useState(0);\n\tlet currentPrice, lastPrice;\n\n\tconst MINUTE_MS = 1000; // 5 minutes\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetStockPrice(\n\t\t\t\tMath.floor(\n\t\t\t\t\tMath.random(props.startPrice, props.startPrice + props.priceRange) *\n\t\t\t\t\t\t1000\n\t\t\t\t)\n\t\t\t);\n\t\t\tconsole.log('Logs every minute');\n\t\t}, MINUTE_MS);\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\t// const updateArrow = () => {\n\t// \tstockPrice > lastPrice ? <div>arrow up</div> : <div>arrow down</div>;\n\t// \tlastPrice = stockPrice;\n\t// };\n\n\treturn (\n\t\t<StockCardContainer>\n\t\t\t<h3>{props.stockTicker}</h3>\n\t\t\t<h3>{props.stockName}</h3>\n\t\t\t<p>{stockPrice}</p>\n\t\t\t<span>\n\t\t\t\t{/* {(() => {\n\t\t\t\t\tcurrentPrice = stockPrice;\n\t\t\t\t\tlet arrow;\n\n\t\t\t\t\tif (currentPrice > lastPrice) {\n\t\t\t\t\t\tarrow = <div>arrow up</div>;\n\t\t\t\t\t} else if (currentPrice < lastPrice) {\n\t\t\t\t\t\tarrow = <div>arrow down</div>;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarrow = <div>equal</div>;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn arrow;\n\t\t\t\t\tlastPrice = currentPrice;\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'current price is' + currentPrice + 'last price is' + lastPrice\n\t\t\t\t\t);\n\t\t\t\t})()} */}\n\t\t\t</span>\n\t\t</StockCardContainer>\n\t);\n};\n\nconst useHasChanged = (val: any) => {\n\tconst prevVal = usePrevious(val);\n\treturn prevVal !== val;\n};\n\nconst usePrevious = (value) => {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t\tref.current = value;\n\t});\n\treturn ref.current;\n};\n\nconst StockMarket = () => {\n\tconst stocks = stockMarketData.map((stock) => (\n\t\t<StockCard\n\t\t\tstockTicker={stock.ticker}\n\t\t\tstockName={stock.stockName}\n\t\t\tcurrentPrice={stock.startingPrice}\n\t\t\tpriceRange={stock.priceRange}\n\t\t\tkey={stock.ticker}></StockCard>\n\t));\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Stock Market</h1>\n\t\t\t{stocks}\n\t\t</Container>\n\t);\n};\n\nexport default StockMarket;\n"]},"metadata":{},"sourceType":"module"}