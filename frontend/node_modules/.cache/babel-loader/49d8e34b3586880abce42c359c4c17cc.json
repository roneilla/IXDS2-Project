{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\n_c2 = CurrentNewsContainer;\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n_c3 = EventCard;\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n_c4 = PastEventsContainer;\n\nconst WorldEvents = props => {\n  _s();\n\n  // TODO: randomize order of world event\n  let pastDisplay, currentDisplay, array;\n  useEffect(() => {\n    array = worldEventsData; // stackoverflow code\n\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }, []);\n\n  const shuffleWorldEventsData = () => {\n    array = worldEventsData; // stackoverflow code\n\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }; // if (props.roundCounter > 1) {\n  // \tcurrentDisplay = worldEventsData.map((data, index) =>\n  // \t\tindex === props.roundCounter ? (\n  // \t\t\t<CurrentNewsContainer key={index}>{data.text}</CurrentNewsContainer>\n  // \t\t) : null\n  // \t);\n\n\n  shuffleWorldEventsData();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"World Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), props.roundCounter > 1 ? array.map((data, index) => index === props.roundCounter ? /*#__PURE__*/_jsxDEV(CurrentNewsContainer, {\n      children: data.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }, this) : null) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PastEventsContainer, {\n      children: props.roundCounter > 1 ? array.slice(2, props.roundCounter).map((data, index) => /*#__PURE__*/_jsxDEV(EventCard, {\n        children: data.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WorldEvents, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c5 = WorldEvents;\nexport default WorldEvents;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CurrentNewsContainer\");\n$RefreshReg$(_c3, \"EventCard\");\n$RefreshReg$(_c4, \"PastEventsContainer\");\n$RefreshReg$(_c5, \"WorldEvents\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js"],"names":["React","useEffect","styled","worldEventsData","Container","div","CurrentNewsContainer","EventCard","PastEventsContainer","WorldEvents","props","pastDisplay","currentDisplay","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","shuffleWorldEventsData","roundCounter","map","data","index","text","slice"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\n\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nconst WorldEvents = (props) => {\n\t// TODO: randomize order of world event\n\tlet pastDisplay, currentDisplay, array;\n\n\tuseEffect(() => {\n\t\tarray = worldEventsData;\n\n\t\t// stackoverflow code\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t}, []);\n\n\tconst shuffleWorldEventsData = () => {\n\t\tarray = worldEventsData;\n\n\t\t// stackoverflow code\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\t// if (props.roundCounter > 1) {\n\t// \tcurrentDisplay = worldEventsData.map((data, index) =>\n\t// \t\tindex === props.roundCounter ? (\n\t// \t\t\t<CurrentNewsContainer key={index}>{data.text}</CurrentNewsContainer>\n\t// \t\t) : null\n\t// \t);\n\n\tshuffleWorldEventsData();\n\treturn (\n\t\t<Container>\n\t\t\t<h1>World Events</h1>\n\t\t\t<h2>Latest</h2>\n\t\t\t{/* TODO: add a placeholder for no news yet */}\n\t\t\t{props.roundCounter > 1\n\t\t\t\t? array.map((data, index) =>\n\t\t\t\t\t\tindex === props.roundCounter ? (\n\t\t\t\t\t\t\t<CurrentNewsContainer key={index}>\n\t\t\t\t\t\t\t\t{data.text}\n\t\t\t\t\t\t\t</CurrentNewsContainer>\n\t\t\t\t\t\t) : null\n\t\t\t\t  )\n\t\t\t\t: null}\n\n\t\t\t{/* {currentDisplay} */}\n\n\t\t\t<h2>Past</h2>\n\t\t\t<PastEventsContainer>\n\t\t\t\t{props.roundCounter > 1\n\t\t\t\t\t? array\n\t\t\t\t\t\t\t.slice(2, props.roundCounter)\n\t\t\t\t\t\t\t.map((data, index) => (\n\t\t\t\t\t\t\t\t<EventCard key={index}>{data.text}</EventCard>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t: null}\n\t\t\t</PastEventsContainer>\n\t\t</Container>\n\t);\n};\n\nexport default WorldEvents;\n"]},"metadata":{},"sourceType":"module"}