{"ast":null,"code":"import _slicedToArray from\"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState}from'react';import styled from'styled-components';import glossary from'../glossary';import{Container,H1,H3,P}from'../shared/global';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledSearchBar=styled.input(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\tfont-size: 1rem;\\n\\tpadding: 1rem;\\n\\tborder: #eee solid 1px;\\n\\tposition: relative;\\n\\twidth: 100%;\\n\\tmax-width: 1000px;\\n\\tmargin: 0 auto;\\n\\tborder-radius: 5px;\\n\"])));var Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\twidth: 100%;\\n\\ttext-align: center;\\n\\tmargin-bottom: 1rem;\\n\\tpadding: 1rem 0;\\n\"])));var Wrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n\"])));var GlossaryCard=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n\\twidth: 100%;\\n\\tmax-width: 1000px;\\n\\tpadding: 1rem;\\n\\tmargin: 0.5rem 0;\\n\\tborder: 1px solid #eee;\\n\\tbackground-color: white;\\n\\tborder-radius: 5px;\\n\"])));var GlossaryPage=function GlossaryPage(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),filterTerm=_useState2[0],setFilterTerm=_useState2[1];var allGlossaryItems=glossary.map(function(data){return/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(H3,{children:data.term}),/*#__PURE__*/_jsx(P,{children:data.definition})]},data.term);});var glossaryItem=glossary.filter(function(_ref){var term=_ref.term;return term===filterTerm.toLowerCase();}).map(function(data){return/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(H3,{children:data.term}),/*#__PURE__*/_jsx(P,{children:data.definition})]},data.term);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(H1,{style:{margin:'1rem 0'},children:\"Glossary\"}),/*#__PURE__*/_jsx(StyledSearchBar,{value:filterTerm,placeholder:\"Search for Terms\",onChange:function onChange(e){setFilterTerm(e.target.value);}})]}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Wrapper,{children:filterTerm!==''?glossaryItem:allGlossaryItems})})]});};export default GlossaryPage;","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/src/pages/GlossaryPage.js"],"names":["React","useState","styled","glossary","Container","H1","H3","P","StyledSearchBar","input","Header","div","Wrapper","GlossaryCard","GlossaryPage","props","filterTerm","setFilterTerm","allGlossaryItems","map","data","term","definition","glossaryItem","filter","toLowerCase","margin","e","target","value"],"mappings":"2cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,OAASC,SAAT,CAAoBC,EAApB,CAAwBC,EAAxB,CAA4BC,CAA5B,KAAqC,kBAArC,C,6IAEA,GAAMC,CAAAA,eAAe,CAAGN,MAAM,CAACO,KAAV,2OAArB,CAWA,GAAMC,CAAAA,MAAM,CAAGR,MAAM,CAACS,GAAV,wJAAZ,CAOA,GAAMC,CAAAA,OAAO,CAAGV,MAAM,CAACS,GAAV,0IAAb,CAMA,GAAME,CAAAA,YAAY,CAAGX,MAAM,CAACS,GAAV,gOAAlB,CAUA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,eACKd,QAAQ,CAAC,EAAD,CADb,wCACxBe,UADwB,eACZC,aADY,eAG/B,GAAMC,CAAAA,gBAAgB,CAAGf,QAAQ,CAACgB,GAAT,CAAa,SAACC,IAAD,qBACrC,MAAC,YAAD,yBACC,KAAC,EAAD,WAAKA,IAAI,CAACC,IAAV,EADD,cAEC,KAAC,CAAD,WAAID,IAAI,CAACE,UAAT,EAFD,GAAmBF,IAAI,CAACC,IAAxB,CADqC,EAAb,CAAzB,CAOA,GAAME,CAAAA,YAAY,CAAGpB,QAAQ,CAC3BqB,MADmB,CACZ,kBAAGH,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAI,GAAKL,UAAU,CAACS,WAAX,EAAvB,EADY,EAEnBN,GAFmB,CAEf,SAACC,IAAD,qBACJ,MAAC,YAAD,yBACC,KAAC,EAAD,WAAKA,IAAI,CAACC,IAAV,EADD,cAEC,KAAC,CAAD,WAAID,IAAI,CAACE,UAAT,EAFD,GAAmBF,IAAI,CAACC,IAAxB,CADI,EAFe,CAArB,CAQA,mBACC,wCACC,MAAC,MAAD,yBACC,KAAC,EAAD,EAAI,KAAK,CAAE,CAAEK,MAAM,CAAE,QAAV,CAAX,sBADD,cAEC,KAAC,eAAD,EACC,KAAK,CAAEV,UADR,CAEC,WAAW,CAAC,kBAFb,CAGC,QAAQ,CAAE,kBAACW,CAAD,CAAO,CAChBV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CACA,CALF,EAFD,GADD,cAWC,KAAC,SAAD,wBACC,KAAC,OAAD,WAAUb,UAAU,GAAK,EAAf,CAAoBO,YAApB,CAAmCL,gBAA7C,EADD,EAXD,GADD,CAiBA,CAnCD,CAqCA,cAAeJ,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport glossary from '../glossary';\n\nimport { Container, H1, H3, P } from '../shared/global';\n\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #eee solid 1px;\n\tposition: relative;\n\twidth: 100%;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\tborder-radius: 5px;\n`;\n\nconst Header = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tmargin-bottom: 1rem;\n\tpadding: 1rem 0;\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst GlossaryCard = styled.div`\n\twidth: 100%;\n\tmax-width: 1000px;\n\tpadding: 1rem;\n\tmargin: 0.5rem 0;\n\tborder: 1px solid #eee;\n\tbackground-color: white;\n\tborder-radius: 5px;\n`;\n\nconst GlossaryPage = (props) => {\n\tconst [filterTerm, setFilterTerm] = useState('');\n\n\tconst allGlossaryItems = glossary.map((data) => (\n\t\t<GlossaryCard key={data.term}>\n\t\t\t<H3>{data.term}</H3>\n\t\t\t<P>{data.definition}</P>\n\t\t</GlossaryCard>\n\t));\n\n\tconst glossaryItem = glossary\n\t\t.filter(({ term }) => term === filterTerm.toLowerCase())\n\t\t.map((data) => (\n\t\t\t<GlossaryCard key={data.term}>\n\t\t\t\t<H3>{data.term}</H3>\n\t\t\t\t<P>{data.definition}</P>\n\t\t\t</GlossaryCard>\n\t\t));\n\treturn (\n\t\t<>\n\t\t\t<Header>\n\t\t\t\t<H1 style={{ margin: '1rem 0' }}>Glossary</H1>\n\t\t\t\t<StyledSearchBar\n\t\t\t\t\tvalue={filterTerm}\n\t\t\t\t\tplaceholder=\"Search for Terms\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetFilterTerm(e.target.value);\n\t\t\t\t\t}}></StyledSearchBar>\n\t\t\t</Header>\n\n\t\t\t<Container>\n\t\t\t\t<Wrapper>{filterTerm !== '' ? glossaryItem : allGlossaryItems}</Wrapper>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default GlossaryPage;\n"]},"metadata":{},"sourceType":"module"}