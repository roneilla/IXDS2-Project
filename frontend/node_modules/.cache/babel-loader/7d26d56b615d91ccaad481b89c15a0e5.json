{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { FlexBetween, H3, H4, P, TextInput } from './../shared/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n`;\n_c = InputRow;\nconst StyledTextInput = styled(TextInput)`\n\tfont-size: 1rem;\n\tpadding: 0.25rem;\n\tmargin: 0;\n`;\n_c2 = StyledTextInput;\n\nconst FinancialTracker = props => {\n  _s();\n\n  const username = props.username;\n  const roundCount = props.roundCount;\n  const [ready, setReady] = useState();\n  const [salary, setSalary] = useState(5000);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [totalLeft, setTotalLeft] = useState(0);\n  const [incomeSource, setIncomeSource] = useState();\n  const [incomeAmount, setIncomeAmount] = useState(0);\n  let total;\n  const [incomeEntries, setIncomeEntries] = useState([{}]);\n  const [inputValue, setInputValue] = useState('');\n  const currentExpenses = []; // use effect, watch if round count changes\n\n  useEffect(() => {\n    console.log('hey its a new round');\n  }, [roundCount]);\n  useEffect(() => {\n    setIncomeEntries([...incomeEntries, {\n      source: 'Salary',\n      amount: Number(salary)\n    }]);\n    setTotalIncome(salary);\n  }, []);\n\n  const expenses = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter all your expenses this month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Expense Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n\n  const addIncome = () => {\n    if (incomeAmount != null && incomeSource != null) {\n      if (incomeAmount != '' && incomeSource != 'null') {\n        setIncomeEntries([...incomeEntries, {\n          source: incomeSource,\n          amount: Number(incomeAmount)\n        }]);\n        setTotalIncome(+totalIncome + +incomeAmount);\n        document.getElementById('incomeSource').value = '';\n        document.getElementById('incomeAmount').value = '';\n        setIncomeSource('');\n        setIncomeAmount('');\n      } else {\n        alert('enter an amount');\n      }\n    } else {\n      alert('enter an amount');\n    }\n  };\n\n  const income = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter all your income this month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"incomeSource\",\n          type: \"text\",\n          placeholder: \"Income Source\",\n          onChange: e => setIncomeSource(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"incomeAmount\",\n          type: \"number\",\n          placeholder: \"Income Amount\",\n          onChange: e => setIncomeAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIncome,\n        children: \"Add income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: \"Income Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), incomeEntries.map((data, index) => /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: [\" \", data.source]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(P, {\n          children: data.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(H3, {\n        style: {\n          textAlign: 'right'\n        },\n        children: [\"Total income: \", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"new payday!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this), income]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FinancialTracker, \"hROVRtaNc1yrr0gLvno+8HW8VU4=\");\n\n_c3 = FinancialTracker;\nexport default FinancialTracker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputRow\");\n$RefreshReg$(_c2, \"StyledTextInput\");\n$RefreshReg$(_c3, \"FinancialTracker\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js"],"names":["React","useState","useEffect","axios","styled","FlexBetween","H3","H4","P","TextInput","InputRow","div","StyledTextInput","FinancialTracker","props","username","roundCount","ready","setReady","salary","setSalary","totalIncome","setTotalIncome","totalExpenses","setTotalExpenses","totalLeft","setTotalLeft","incomeSource","setIncomeSource","incomeAmount","setIncomeAmount","total","incomeEntries","setIncomeEntries","inputValue","setInputValue","currentExpenses","console","log","source","amount","Number","expenses","addIncome","document","getElementById","value","alert","income","e","target","map","data","index","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport { FlexBetween, H3, H4, P, TextInput } from './../shared/global';\n\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n`;\n\nconst StyledTextInput = styled(TextInput)`\n\tfont-size: 1rem;\n\tpadding: 0.25rem;\n\tmargin: 0;\n`;\n\nconst FinancialTracker = (props) => {\n\tconst username = props.username;\n\tconst roundCount = props.roundCount;\n\tconst [ready, setReady] = useState();\n\n\tconst [salary, setSalary] = useState(5000);\n\tconst [totalIncome, setTotalIncome] = useState(0);\n\tconst [totalExpenses, setTotalExpenses] = useState(0);\n\tconst [totalLeft, setTotalLeft] = useState(0);\n\n\tconst [incomeSource, setIncomeSource] = useState();\n\tconst [incomeAmount, setIncomeAmount] = useState(0);\n\n\tlet total;\n\n\tconst [incomeEntries, setIncomeEntries] = useState([{}]);\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst currentExpenses = [];\n\t// use effect, watch if round count changes\n\tuseEffect(() => {\n\t\tconsole.log('hey its a new round');\n\t}, [roundCount]);\n\n\tuseEffect(() => {\n\t\tsetIncomeEntries([\n\t\t\t...incomeEntries,\n\t\t\t{\n\t\t\t\tsource: 'Salary',\n\t\t\t\tamount: Number(salary),\n\t\t\t},\n\t\t]);\n\n\t\tsetTotalIncome(salary);\n\t}, []);\n\n\tconst expenses = (\n\t\t<div>\n\t\t\t<h2>Enter all your expenses this month</h2>\n\t\t\t<div>\n\t\t\t\t<h2>expenses</h2>\n\t\t\t\t<input type=\"number\" placeholder=\"Expense Here\"></input>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tconst addIncome = () => {\n\t\tif (incomeAmount != null && incomeSource != null) {\n\t\t\tif (incomeAmount != '' && incomeSource != 'null') {\n\t\t\t\tsetIncomeEntries([\n\t\t\t\t\t...incomeEntries,\n\t\t\t\t\t{\n\t\t\t\t\t\tsource: incomeSource,\n\t\t\t\t\t\tamount: Number(incomeAmount),\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\tsetTotalIncome(+totalIncome + +incomeAmount);\n\t\t\t\tdocument.getElementById('incomeSource').value = '';\n\t\t\t\tdocument.getElementById('incomeAmount').value = '';\n\n\t\t\t\tsetIncomeSource('');\n\t\t\t\tsetIncomeAmount('');\n\t\t\t} else {\n\t\t\t\talert('enter an amount');\n\t\t\t}\n\t\t} else {\n\t\t\talert('enter an amount');\n\t\t}\n\t};\n\n\tconst income = (\n\t\t<div>\n\t\t\t<FlexBetween>\n\t\t\t\t<h2>Enter all your income this month</h2>\n\t\t\t</FlexBetween>\n\n\t\t\t<span>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeSource\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Income Source\"\n\t\t\t\t\t\tonChange={(e) => setIncomeSource(e.target.value)}></StyledTextInput>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Income Amount\"\n\t\t\t\t\t\tonChange={(e) => setIncomeAmount(e.target.value)}></StyledTextInput>\n\t\t\t\t</InputRow>\n\n\t\t\t\t<button onClick={addIncome}>Add income</button>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\t<H3>Income Entries</H3>\n\t\t\t\t{incomeEntries.map((data, index) => (\n\t\t\t\t\t<InputRow key={index}>\n\t\t\t\t\t\t<H3> {data.source}</H3>\n\t\t\t\t\t\t<P>{data.amount}</P>\n\t\t\t\t\t</InputRow>\n\t\t\t\t))}\n\t\t\t\t<H3 style={{ textAlign: 'right' }}>Total income: {totalIncome}</H3>\n\t\t\t</div>\n\n\t\t\t<button>next</button>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>new payday!</h1>\n\t\t\t{income}\n\t\t</div>\n\t);\n};\n\nexport default FinancialTracker;\n"]},"metadata":{},"sourceType":"module"}