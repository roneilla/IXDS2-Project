{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/StockMarket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, H1, HeadingImg, P } from '../shared/global';\nimport stockMarketData from './../stockMarketData';\nimport Stocks from './../assets/Icon/Stocks.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #eee 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(12, 1fr);\n\tgrid-column-gap: 2rem;\n`;\n_c2 = StockCardContainer;\nconst Ticker = styled.div`\n\tgrid-column: span 2;\n\tfont-weight: 700;\n`;\n_c3 = Ticker;\nconst StockName = styled.div`\n\tgrid-column: span 6;\n`;\n_c4 = StockName;\nconst StockPrice = styled.div`\n\tgrid-column: span 3;\n\tfont-weight: 700;\n\t&::after {\n\t\tcontent: '$ ';\n\t}\n`;\n_c5 = StockPrice;\nconst ArrowContainer = styled.div`\n\tgrid-column: span 1;\n`;\n_c6 = ArrowContainer;\nconst MaterialIcons = styled.div`\n\tfont-family: 'Material Icons';\n`;\n_c7 = MaterialIcons;\n\nconst StockCard = props => {\n  _s();\n\n  const [stockPrice, setStockPrice] = useState(0);\n  const previousPriceRef = useRef();\n  const MINUTE_MS = 1000; // 5 minutes is 300000\n\n  let growth = Math.floor(props.monthlyGrowth * props.roundCounter);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStockPrice(props.startingPrice + Math.floor(Math.random(0, growth) * 100));\n      console.log('Logs every second');\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    previousPriceRef.current = stockPrice;\n  });\n  const previousPrice = previousPriceRef.current;\n  let arrow;\n\n  if (stockPrice > previousPrice) {\n    arrow = /*#__PURE__*/_jsxDEV(MaterialIcons, {\n      style: {\n        color: '#33B466'\n      },\n      children: \"arrow_upward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  } else if (stockPrice < previousPrice) {\n    arrow = /*#__PURE__*/_jsxDEV(MaterialIcons, {\n      style: {\n        color: '#C64949'\n      },\n      children: \"arrow_downward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this);\n  } else {\n    arrow = /*#__PURE__*/_jsxDEV(MaterialIcons, {\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StockCardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Ticker, {\n      children: props.stockTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StockName, {\n      children: props.stockName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StockPrice, {\n      children: stockPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ArrowContainer, {\n      children: arrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n\n_s(StockCard, \"rC3EW9yH4FWNXpfDfzr86R1SZqQ=\");\n\n_c8 = StockCard;\n\nconst StockMarket = props => {\n  const stocks = stockMarketData.map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n    roundCounter: props.roundCounter,\n    stockTicker: stock.ticker,\n    stockName: stock.stockName,\n    startingPrice: stock.startingPrice,\n    monthlyGrowth: stock.monthlyGrowth\n  }, stock.ticker, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeading, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingImg, {\n        src: Stocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(H1, {\n        children: \"Stock Market\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), stocks]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n};\n\n_c9 = StockMarket;\nexport default StockMarket;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StockCardContainer\");\n$RefreshReg$(_c3, \"Ticker\");\n$RefreshReg$(_c4, \"StockName\");\n$RefreshReg$(_c5, \"StockPrice\");\n$RefreshReg$(_c6, \"ArrowContainer\");\n$RefreshReg$(_c7, \"MaterialIcons\");\n$RefreshReg$(_c8, \"StockCard\");\n$RefreshReg$(_c9, \"StockMarket\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/StockMarket.js"],"names":["React","useState","useEffect","useRef","styled","CardHeading","H1","HeadingImg","P","stockMarketData","Stocks","Container","div","StockCardContainer","Ticker","StockName","StockPrice","ArrowContainer","MaterialIcons","StockCard","props","stockPrice","setStockPrice","previousPriceRef","MINUTE_MS","growth","Math","floor","monthlyGrowth","roundCounter","interval","setInterval","startingPrice","random","console","log","clearInterval","current","previousPrice","arrow","color","stockTicker","stockName","StockMarket","stocks","map","stock","ticker"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, H1, HeadingImg, P } from '../shared/global';\nimport stockMarketData from './../stockMarketData';\nimport Stocks from './../assets/Icon/Stocks.png';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #eee 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(12, 1fr);\n\tgrid-column-gap: 2rem;\n`;\n\nconst Ticker = styled.div`\n\tgrid-column: span 2;\n\tfont-weight: 700;\n`;\n\nconst StockName = styled.div`\n\tgrid-column: span 6;\n`;\n\nconst StockPrice = styled.div`\n\tgrid-column: span 3;\n\tfont-weight: 700;\n\t&::after {\n\t\tcontent: '$ ';\n\t}\n`;\n\nconst ArrowContainer = styled.div`\n\tgrid-column: span 1;\n`;\n\nconst MaterialIcons = styled.div`\n\tfont-family: 'Material Icons';\n`;\n\nconst StockCard = (props) => {\n\tconst [stockPrice, setStockPrice] = useState(0);\n\tconst previousPriceRef = useRef();\n\n\tconst MINUTE_MS = 1000; // 5 minutes is 300000\n\n\tlet growth = Math.floor(props.monthlyGrowth * props.roundCounter);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetStockPrice(\n\t\t\t\tprops.startingPrice + Math.floor(Math.random(0, growth) * 100)\n\t\t\t);\n\t\t\tconsole.log('Logs every second');\n\t\t}, MINUTE_MS);\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tpreviousPriceRef.current = stockPrice;\n\t});\n\n\tconst previousPrice = previousPriceRef.current;\n\n\tlet arrow;\n\n\tif (stockPrice > previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#33B466' }}>arrow_upward</MaterialIcons>\n\t\t);\n\t} else if (stockPrice < previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#C64949' }}>arrow_downward</MaterialIcons>\n\t\t);\n\t} else {\n\t\tarrow = <MaterialIcons>=</MaterialIcons>;\n\t}\n\n\treturn (\n\t\t<StockCardContainer>\n\t\t\t<Ticker>{props.stockTicker}</Ticker>\n\t\t\t<StockName>{props.stockName}</StockName>\n\t\t\t<StockPrice>{stockPrice}</StockPrice>\n\t\t\t<ArrowContainer>{arrow}</ArrowContainer>\n\t\t</StockCardContainer>\n\t);\n};\n\nconst StockMarket = (props) => {\n\tconst stocks = stockMarketData.map((stock) => (\n\t\t<StockCard\n\t\t\troundCounter={props.roundCounter}\n\t\t\tstockTicker={stock.ticker}\n\t\t\tstockName={stock.stockName}\n\t\t\tstartingPrice={stock.startingPrice}\n\t\t\tmonthlyGrowth={stock.monthlyGrowth}\n\t\t\tkey={stock.ticker}></StockCard>\n\t));\n\n\treturn (\n\t\t<Container>\n\t\t\t<CardHeading>\n\t\t\t\t<HeadingImg src={Stocks}></HeadingImg>\n\t\t\t\t<H1>Stock Market</H1>\n\t\t\t</CardHeading>\n\t\t\t{stocks}\n\t\t</Container>\n\t);\n};\n\nexport default StockMarket;\n"]},"metadata":{},"sourceType":"module"}