{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { FlexBetween, H3, H4, P, PrimaryButton, PrimaryButtonOutline, SmallOutlineButton, TextInput } from './../shared/global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n`;\n_c = InputRow;\nconst CenteredRow = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n`;\n_c2 = CenteredRow;\nconst StyledTextInput = styled(TextInput)`\n\twidth: 200px;\n\tfont-size: 1rem;\n\tpadding: 0.25rem;\n\tmargin: 0 0.25rem;\n`;\n_c3 = StyledTextInput;\n\nconst FinancialTracker = props => {\n  _s();\n\n  const username = props.username;\n  const roundCount = props.roundCount;\n  const [ready, setReady] = useState(false);\n  const salary = 5000;\n  const [incomeDone, setIncomeDone] = useState(false);\n  const [expenseDone, setExpenseDone] = useState(false);\n  const [transferDone, setTransferDone] = useState(false);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [incomeSource, setIncomeSource] = useState();\n  const [incomeAmount, setIncomeAmount] = useState(0);\n  const [expenseSource, setExpenseSource] = useState();\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  const [incomeEntries, setIncomeEntries] = useState([{}]);\n  const [expenseEntries, setExpenseEntries] = useState([{}]);\n  const [chequingDeposit, setChequingDeposit] = useState(0);\n  const [savingsDeposit, setSavingsDeposit] = useState(0); // use effect, watch if round count changes\n\n  useEffect(() => {\n    console.log('hey its a new round! ' + roundCount);\n    setReady(true);\n  }, [roundCount]);\n  useEffect(() => {\n    setIncomeEntries([...incomeEntries, {\n      source: 'Salary',\n      amount: Number(salary)\n    }]);\n    setTotalIncome(salary);\n  }, []);\n\n  const addIncome = () => {\n    if (incomeAmount != null && incomeSource != null) {\n      if (incomeAmount != '' && incomeSource != 'null') {\n        setIncomeEntries([...incomeEntries, {\n          source: incomeSource,\n          amount: Number(incomeAmount)\n        }]);\n        setTotalIncome(+totalIncome + +incomeAmount);\n        document.getElementById('incomeSource').value = '';\n        document.getElementById('incomeAmount').value = '';\n        setIncomeSource('');\n        setIncomeAmount('');\n      } else {\n        alert('enter an amount');\n      }\n    } else {\n      alert('enter an amount');\n    }\n  };\n\n  const addExpense = () => {\n    if (expenseAmount != null && expenseSource != null) {\n      if (expenseAmount != '' && expenseSource != 'null') {\n        setExpenseEntries([...expenseEntries, {\n          source: expenseSource,\n          amount: Number(expenseAmount)\n        }]);\n        setTotalExpenses(+totalExpenses + +expenseAmount);\n        document.getElementById('expenseSource').value = '';\n        document.getElementById('expenseAmount').value = '';\n        setExpenseSource('');\n        setExpenseAmount('');\n      } else {\n        alert('enter an amount');\n      }\n    } else {\n      alert('enter an amount');\n    }\n  };\n\n  const income = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n      children: /*#__PURE__*/_jsxDEV(H3, {\n        children: \"Enter all your income this month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"incomeSource\",\n          type: \"text\",\n          placeholder: \"Income Source\",\n          onChange: e => setIncomeSource(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"incomeAmount\",\n          type: \"number\",\n          placeholder: \"Income Amount\",\n          onChange: e => setIncomeAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CenteredRow, {\n        children: /*#__PURE__*/_jsxDEV(SmallOutlineButton, {\n          onClick: addIncome,\n          children: \"Add income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: \"Income Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), incomeEntries.map((data, index) => index > 0 ? /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: [\" \", data.source]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(P, {\n          children: data.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 8\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this) : null), /*#__PURE__*/_jsxDEV(H3, {\n        style: {\n          textAlign: 'right'\n        },\n        children: [\"Total income: \", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CenteredRow, {\n      children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: e => setIncomeDone(true),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 3\n  }, this);\n\n  const expense = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n      children: /*#__PURE__*/_jsxDEV(H3, {\n        children: \"Enter all your expenses this month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"expenseSource\",\n          type: \"text\",\n          placeholder: \"Expense Source\",\n          onChange: e => setExpenseSource(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"expenseAmount\",\n          type: \"number\",\n          placeholder: \"Expense Amount\",\n          onChange: e => setExpenseAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CenteredRow, {\n        children: /*#__PURE__*/_jsxDEV(SmallOutlineButton, {\n          onClick: addExpense,\n          children: \"Add expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: \"Expense Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), expenseEntries.map((data, index) => index > 0 ? /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: [\" \", data.source]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(P, {\n          children: data.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 8\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this) : null), /*#__PURE__*/_jsxDEV(H3, {\n        style: {\n          textAlign: 'right'\n        },\n        children: [\"Total expenses: \", totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CenteredRow, {\n      children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: e => setExpenseDone(true),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, this);\n\n  const finishTransfer = e => {\n    setTransferDone(true);\n    e.preventDefault();\n    const total = totalIncome - totalExpenses - chequingDeposit - savingsDeposit;\n    const bankDeposit = {\n      chequingDeposit: chequingDeposit,\n      savingsDeposit: savingsDeposit\n    };\n    axios.post('http://localhost:5000/users/bankAccount/' + username, bankDeposit).then(res => {\n      console.log(res.data);\n      alert('deposits added');\n    });\n\n    if (total === 0) {\n      setIncomeDone(false);\n      setExpenseDone(false);\n      setTransferDone(false);\n      setIncomeEntries([{}]);\n      setExpenseEntries([{}]);\n      setTotalIncome(salary);\n      setTotalExpenses(0);\n      setChequingDeposit(0);\n      setSavingsDeposit(0);\n      setReady(false);\n      return;\n    } else {\n      alert('please make sure that total left to transfer is 0');\n    }\n  };\n\n  const transfer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: \"Monthly Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(P, {\n          children: totalIncome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(P, {\n          children: totalExpenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(H3, {\n        children: [\"Total amount to transfer: \", totalIncome - totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(P, {\n        children: \"Enter amount desired to transfer into each account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: \"Chequing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"chequingDeposit\",\n          type: \"number\",\n          placeholder: \"Chequing\",\n          value: chequingDeposit,\n          onChange: e => setChequingDeposit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [/*#__PURE__*/_jsxDEV(H3, {\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextInput, {\n          id: \"savingsDeposit\",\n          type: \"number\",\n          placeholder: \"Savings\",\n          value: savingsDeposit,\n          onChange: e => setSavingsDeposit(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: [totalIncome - totalExpenses - chequingDeposit - savingsDeposit === 0 ? /*#__PURE__*/_jsxDEV(P, {\n          children: \"You've transferred it all!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(P, {\n          style: {\n            color: 'red'\n          },\n          children: [\"Amount left:\", totalIncome - totalExpenses - chequingDeposit - savingsDeposit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(H3, {\n          children: [\"Total Transferred: \", +chequingDeposit + +savingsDeposit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: finishTransfer,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ready === true ? incomeDone === false ? income : expenseDone === false ? expense : transferDone === false ? transfer : null : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FinancialTracker, \"e3mfPt4jasLOdyx7T0B3vYCu9zQ=\");\n\n_c4 = FinancialTracker;\nexport default FinancialTracker;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputRow\");\n$RefreshReg$(_c2, \"CenteredRow\");\n$RefreshReg$(_c3, \"StyledTextInput\");\n$RefreshReg$(_c4, \"FinancialTracker\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/FinancialTracker.js"],"names":["React","useState","useEffect","axios","styled","FlexBetween","H3","H4","P","PrimaryButton","PrimaryButtonOutline","SmallOutlineButton","TextInput","InputRow","div","CenteredRow","StyledTextInput","FinancialTracker","props","username","roundCount","ready","setReady","salary","incomeDone","setIncomeDone","expenseDone","setExpenseDone","transferDone","setTransferDone","totalIncome","setTotalIncome","totalExpenses","setTotalExpenses","incomeSource","setIncomeSource","incomeAmount","setIncomeAmount","expenseSource","setExpenseSource","expenseAmount","setExpenseAmount","incomeEntries","setIncomeEntries","expenseEntries","setExpenseEntries","chequingDeposit","setChequingDeposit","savingsDeposit","setSavingsDeposit","console","log","source","amount","Number","addIncome","document","getElementById","value","alert","addExpense","income","e","target","map","data","index","textAlign","expense","finishTransfer","preventDefault","total","bankDeposit","post","then","res","transfer","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport {\n\tFlexBetween,\n\tH3,\n\tH4,\n\tP,\n\tPrimaryButton,\n\tPrimaryButtonOutline,\n\tSmallOutlineButton,\n\tTextInput,\n} from './../shared/global';\n\nconst InputRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: 1px #eee solid;\n\tborder-radius: 5px;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n`;\n\nconst CenteredRow = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n`;\n\nconst StyledTextInput = styled(TextInput)`\n\twidth: 200px;\n\tfont-size: 1rem;\n\tpadding: 0.25rem;\n\tmargin: 0 0.25rem;\n`;\n\nconst FinancialTracker = (props) => {\n\tconst username = props.username;\n\tconst roundCount = props.roundCount;\n\n\tconst [ready, setReady] = useState(false);\n\n\tconst salary = 5000;\n\tconst [incomeDone, setIncomeDone] = useState(false);\n\tconst [expenseDone, setExpenseDone] = useState(false);\n\tconst [transferDone, setTransferDone] = useState(false);\n\n\tconst [totalIncome, setTotalIncome] = useState(0);\n\tconst [totalExpenses, setTotalExpenses] = useState(0);\n\n\tconst [incomeSource, setIncomeSource] = useState();\n\tconst [incomeAmount, setIncomeAmount] = useState(0);\n\tconst [expenseSource, setExpenseSource] = useState();\n\tconst [expenseAmount, setExpenseAmount] = useState(0);\n\n\tconst [incomeEntries, setIncomeEntries] = useState([{}]);\n\tconst [expenseEntries, setExpenseEntries] = useState([{}]);\n\n\tconst [chequingDeposit, setChequingDeposit] = useState(0);\n\tconst [savingsDeposit, setSavingsDeposit] = useState(0);\n\n\t// use effect, watch if round count changes\n\tuseEffect(() => {\n\t\tconsole.log('hey its a new round! ' + roundCount);\n\t\tsetReady(true);\n\t}, [roundCount]);\n\n\tuseEffect(() => {\n\t\tsetIncomeEntries([\n\t\t\t...incomeEntries,\n\t\t\t{\n\t\t\t\tsource: 'Salary',\n\t\t\t\tamount: Number(salary),\n\t\t\t},\n\t\t]);\n\n\t\tsetTotalIncome(salary);\n\t}, []);\n\n\tconst addIncome = () => {\n\t\tif (incomeAmount != null && incomeSource != null) {\n\t\t\tif (incomeAmount != '' && incomeSource != 'null') {\n\t\t\t\tsetIncomeEntries([\n\t\t\t\t\t...incomeEntries,\n\t\t\t\t\t{\n\t\t\t\t\t\tsource: incomeSource,\n\t\t\t\t\t\tamount: Number(incomeAmount),\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\tsetTotalIncome(+totalIncome + +incomeAmount);\n\t\t\t\tdocument.getElementById('incomeSource').value = '';\n\t\t\t\tdocument.getElementById('incomeAmount').value = '';\n\n\t\t\t\tsetIncomeSource('');\n\t\t\t\tsetIncomeAmount('');\n\t\t\t} else {\n\t\t\t\talert('enter an amount');\n\t\t\t}\n\t\t} else {\n\t\t\talert('enter an amount');\n\t\t}\n\t};\n\n\tconst addExpense = () => {\n\t\tif (expenseAmount != null && expenseSource != null) {\n\t\t\tif (expenseAmount != '' && expenseSource != 'null') {\n\t\t\t\tsetExpenseEntries([\n\t\t\t\t\t...expenseEntries,\n\t\t\t\t\t{\n\t\t\t\t\t\tsource: expenseSource,\n\t\t\t\t\t\tamount: Number(expenseAmount),\n\t\t\t\t\t},\n\t\t\t\t]);\n\n\t\t\t\tsetTotalExpenses(+totalExpenses + +expenseAmount);\n\t\t\t\tdocument.getElementById('expenseSource').value = '';\n\t\t\t\tdocument.getElementById('expenseAmount').value = '';\n\n\t\t\t\tsetExpenseSource('');\n\t\t\t\tsetExpenseAmount('');\n\t\t\t} else {\n\t\t\t\talert('enter an amount');\n\t\t\t}\n\t\t} else {\n\t\t\talert('enter an amount');\n\t\t}\n\t};\n\n\tconst income = (\n\t\t<div>\n\t\t\t<FlexBetween>\n\t\t\t\t<H3>Enter all your income this month</H3>\n\t\t\t</FlexBetween>\n\n\t\t\t<span>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeSource\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Income Source\"\n\t\t\t\t\t\tonChange={(e) => setIncomeSource(e.target.value)}></StyledTextInput>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"incomeAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Income Amount\"\n\t\t\t\t\t\tonChange={(e) => setIncomeAmount(e.target.value)}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<CenteredRow>\n\t\t\t\t\t<SmallOutlineButton onClick={addIncome}>\n\t\t\t\t\t\tAdd income\n\t\t\t\t\t</SmallOutlineButton>\n\t\t\t\t</CenteredRow>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\t<H3>Income Entries</H3>\n\t\t\t\t{incomeEntries.map((data, index) =>\n\t\t\t\t\tindex > 0 ? (\n\t\t\t\t\t\t<InputRow key={index}>\n\t\t\t\t\t\t\t<H3> {data.source}</H3>\n\t\t\t\t\t\t\t<P>{data.amount}</P>\n\t\t\t\t\t\t</InputRow>\n\t\t\t\t\t) : null\n\t\t\t\t)}\n\t\t\t\t<H3 style={{ textAlign: 'right' }}>Total income: {totalIncome}</H3>\n\t\t\t</div>\n\n\t\t\t<CenteredRow>\n\t\t\t\t<PrimaryButton onClick={(e) => setIncomeDone(true)}>Next</PrimaryButton>\n\t\t\t</CenteredRow>\n\t\t</div>\n\t);\n\n\tconst expense = (\n\t\t<div>\n\t\t\t<FlexBetween>\n\t\t\t\t<H3>Enter all your expenses this month</H3>\n\t\t\t</FlexBetween>\n\n\t\t\t<span>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"expenseSource\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Expense Source\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetExpenseSource(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"expenseAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Expense Amount\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetExpenseAmount(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<CenteredRow>\n\t\t\t\t\t<SmallOutlineButton onClick={addExpense}>\n\t\t\t\t\t\tAdd expense\n\t\t\t\t\t</SmallOutlineButton>\n\t\t\t\t</CenteredRow>\n\t\t\t</span>\n\n\t\t\t<div>\n\t\t\t\t<H3>Expense Entries</H3>\n\t\t\t\t{expenseEntries.map((data, index) =>\n\t\t\t\t\tindex > 0 ? (\n\t\t\t\t\t\t<InputRow key={index}>\n\t\t\t\t\t\t\t<H3> {data.source}</H3>\n\t\t\t\t\t\t\t<P>{data.amount}</P>\n\t\t\t\t\t\t</InputRow>\n\t\t\t\t\t) : null\n\t\t\t\t)}\n\t\t\t\t<H3 style={{ textAlign: 'right' }}>Total expenses: {totalExpenses}</H3>\n\t\t\t</div>\n\n\t\t\t<CenteredRow>\n\t\t\t\t<PrimaryButton onClick={(e) => setExpenseDone(true)}>\n\t\t\t\t\tNext\n\t\t\t\t</PrimaryButton>\n\t\t\t</CenteredRow>\n\t\t</div>\n\t);\n\n\tconst finishTransfer = (e) => {\n\t\tsetTransferDone(true);\n\n\t\te.preventDefault();\n\t\tconst total =\n\t\t\ttotalIncome - totalExpenses - chequingDeposit - savingsDeposit;\n\n\t\tconst bankDeposit = {\n\t\t\tchequingDeposit: chequingDeposit,\n\t\t\tsavingsDeposit: savingsDeposit,\n\t\t};\n\n\t\taxios\n\t\t\t.post('http://localhost:5000/users/bankAccount/' + username, bankDeposit)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\talert('deposits added');\n\t\t\t});\n\n\t\tif (total === 0) {\n\t\t\tsetIncomeDone(false);\n\t\t\tsetExpenseDone(false);\n\t\t\tsetTransferDone(false);\n\t\t\tsetIncomeEntries([{}]);\n\t\t\tsetExpenseEntries([{}]);\n\t\t\tsetTotalIncome(salary);\n\t\t\tsetTotalExpenses(0);\n\t\t\tsetChequingDeposit(0);\n\t\t\tsetSavingsDeposit(0);\n\t\t\tsetReady(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\talert('please make sure that total left to transfer is 0');\n\t\t}\n\t};\n\n\tconst transfer = (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<H3>Monthly Summary</H3>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Total Income</H3>\n\t\t\t\t\t<P>{totalIncome}</P>\n\t\t\t\t</InputRow>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Total Expenses</H3>\n\t\t\t\t\t<P>{totalExpenses}</P>\n\t\t\t\t</InputRow>\n\n\t\t\t\t<H3>Total amount to transfer: {totalIncome - totalExpenses}</H3>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<P>Enter amount desired to transfer into each account</P>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Chequing</H3>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"chequingDeposit\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Chequing\"\n\t\t\t\t\t\tvalue={chequingDeposit}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetChequingDeposit(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<InputRow>\n\t\t\t\t\t<H3>Savings</H3>\n\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\tid=\"savingsDeposit\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Savings\"\n\t\t\t\t\t\tvalue={savingsDeposit}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetSavingsDeposit(e.target.value)\n\t\t\t\t\t\t}></StyledTextInput>\n\t\t\t\t</InputRow>\n\t\t\t\t<span style={{ textAlign: 'right' }}>\n\t\t\t\t\t{totalIncome - totalExpenses - chequingDeposit - savingsDeposit ===\n\t\t\t\t\t0 ? (\n\t\t\t\t\t\t<P>You've transferred it all!</P>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<P style={{ color: 'red' }}>\n\t\t\t\t\t\t\tAmount left:\n\t\t\t\t\t\t\t{totalIncome - totalExpenses - chequingDeposit - savingsDeposit}\n\t\t\t\t\t\t</P>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<H3>Total Transferred: {+chequingDeposit + +savingsDeposit}</H3>\n\n\t\t\t\t\t<PrimaryButton onClick={finishTransfer}>Next</PrimaryButton>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{ready === true\n\t\t\t\t? incomeDone === false\n\t\t\t\t\t? income\n\t\t\t\t\t: expenseDone === false\n\t\t\t\t\t? expense\n\t\t\t\t\t: transferDone === false\n\t\t\t\t\t? transfer\n\t\t\t\t\t: null\n\t\t\t\t: null}\n\t\t</div>\n\t);\n};\n\nexport default FinancialTracker;\n"]},"metadata":{},"sourceType":"module"}