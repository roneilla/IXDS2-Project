{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ColumnFlex, Container, H1, PrimaryButton, TextInput, Button } from '../shared/global';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Gamemaster from './../assets/gamemaster.png';\nimport Player from './../assets/player.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerButton = styled(Button)`\n\tbackground-color: #ecf1f7;\n\ttext-align: center;\n\tvertical-align: center;\n`;\n_c = PlayerButton;\nconst GamemasterButton = styled(Button)`\n\tbackground-color: #fef9e6;\n\ttext-align: center;\n\tvertical-align: center;\n`;\n_c2 = GamemasterButton;\n\nconst Game = () => {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [role, setRole] = useState();\n  const [serverName, setServerName] = useState();\n  const [ready, setReady] = useState(false);\n  const [existingServers, setExistingServers] = useState([]);\n  const [newPopulation, setNewPopulation] = useState(1);\n  const history = useHistory();\n\n  const beginGame = e => {\n    e.preventDefault();\n    console.log(username + ' is a ' + role);\n    const user = {\n      username: username,\n      role: role\n    }; // create an error for if username is null or undefine\n    // set parameter requirements for username\n\n    axios.post('http://localhost:5000/users/add', user).then(res => console.log(res.data));\n    setReady(true);\n  };\n\n  const createServer = e => {\n    e.preventDefault();\n    console.log('server name is' + serverName);\n    const serverInfo = {\n      servername: serverName,\n      population: 1\n    };\n\n    for (let i = 0; i <= existingServers.length; i++) {\n      if (serverName === existingServers[i]) {\n        alert('server already exists. choose a new name'); // TODO clear the input field\n      } else {\n        axios.post('http://localhost:5000/serverRoom/add', serverInfo).then(res => {\n          console.log(res.data);\n          history.push('/gamemaster?username=' + username + '&servername=' + serverName);\n        });\n      }\n    }\n  };\n\n  const joinServer = e => {\n    e.preventDefault();\n    console.log('server name is' + serverName);\n\n    for (let i = 0; i <= existingServers.length; i++) {\n      if (serverName === existingServers[i]) {\n        if (existingServers[i].population !== 7) {\n          axios.post('http://localhost:5000/serverRoom/updatePopulation/' + serverName).then(res => {\n            console.log(res.data.population);\n          });\n          history.push('/player?username=' + username + '&servername=' + serverName);\n        } else {\n          console.log('too many people here');\n        }\n      } else {\n        console.log('server does not exist');\n      }\n    }\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/serverRoom').then(response => {\n      if (response.data.length > 0) {\n        setExistingServers(response.data.map(server => server.servername));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: ready === false ? /*#__PURE__*/_jsxDEV(ColumnFlex, {\n      children: [/*#__PURE__*/_jsxDEV(H1, {\n        children: \"What would you like to be called?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"Write your username here\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(H1, {\n        children: \"What is your role?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(PlayerButton, {\n        onClick: e => {\n          setRole('player');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 8\n          }, this), \"Player\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(GamemasterButton, {\n        onClick: e => {\n          setRole('gamemaster');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Gamemaster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), \"Gamemaster\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        onClick: beginGame,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: role === 'player' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(H1, {\n          children: \"Join Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Find a Server\",\n          onChange: e => {\n            setServerName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinServer,\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(H1, {\n          children: \"Host Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"servername\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"servername\",\n          placeholder: \"Create a Server\",\n          onChange: e => {\n            setServerName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createServer,\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this); //\n};\n\n_s(Game, \"5RPJbG9obGTk2fh6+E9oo0PfQlQ=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Game;\nexport default Game;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PlayerButton\");\n$RefreshReg$(_c2, \"GamemasterButton\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Game.js"],"names":["React","useState","useEffect","ColumnFlex","Container","H1","PrimaryButton","TextInput","Button","axios","useHistory","styled","Gamemaster","Player","PlayerButton","GamemasterButton","Game","username","setUsername","role","setRole","serverName","setServerName","ready","setReady","existingServers","setExistingServers","newPopulation","setNewPopulation","history","beginGame","e","preventDefault","console","log","user","post","then","res","data","createServer","serverInfo","servername","population","i","length","alert","push","joinServer","get","response","map","server","catch","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n\tColumnFlex,\n\tContainer,\n\tH1,\n\tPrimaryButton,\n\tTextInput,\n\tButton,\n} from '../shared/global';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Gamemaster from './../assets/gamemaster.png';\nimport Player from './../assets/player.png';\n\nconst PlayerButton = styled(Button)`\n\tbackground-color: #ecf1f7;\n\ttext-align: center;\n\tvertical-align: center;\n`;\n\nconst GamemasterButton = styled(Button)`\n\tbackground-color: #fef9e6;\n\ttext-align: center;\n\tvertical-align: center;\n`;\n\nconst Game = () => {\n\tconst [username, setUsername] = useState();\n\tconst [role, setRole] = useState();\n\tconst [serverName, setServerName] = useState();\n\tconst [ready, setReady] = useState(false);\n\tconst [existingServers, setExistingServers] = useState([]);\n\tconst [newPopulation, setNewPopulation] = useState(1);\n\n\tconst history = useHistory();\n\n\tconst beginGame = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(username + ' is a ' + role);\n\n\t\tconst user = {\n\t\t\tusername: username,\n\t\t\trole: role,\n\t\t};\n\n\t\t// create an error for if username is null or undefine\n\t\t// set parameter requirements for username\n\n\t\taxios\n\t\t\t.post('http://localhost:5000/users/add', user)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\tsetReady(true);\n\t};\n\n\tconst createServer = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('server name is' + serverName);\n\n\t\tconst serverInfo = {\n\t\t\tservername: serverName,\n\t\t\tpopulation: 1,\n\t\t};\n\n\t\tfor (let i = 0; i <= existingServers.length; i++) {\n\t\t\tif (serverName === existingServers[i]) {\n\t\t\t\talert('server already exists. choose a new name');\n\t\t\t\t// TODO clear the input field\n\t\t\t} else {\n\t\t\t\taxios\n\t\t\t\t\t.post('http://localhost:5000/serverRoom/add', serverInfo)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\t\thistory.push(\n\t\t\t\t\t\t\t'/gamemaster?username=' + username + '&servername=' + serverName\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst joinServer = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log('server name is' + serverName);\n\n\t\tfor (let i = 0; i <= existingServers.length; i++) {\n\t\t\tif (serverName === existingServers[i]) {\n\t\t\t\tif (existingServers[i].population !== 7) {\n\t\t\t\t\taxios\n\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t'http://localhost:5000/serverRoom/updatePopulation/' + serverName\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tconsole.log(res.data.population);\n\t\t\t\t\t\t});\n\n\t\t\t\t\thistory.push(\n\t\t\t\t\t\t'/player?username=' + username + '&servername=' + serverName\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('too many people here');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('server does not exist');\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get('http://localhost:5000/serverRoom')\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.length > 0) {\n\t\t\t\t\tsetExistingServers(response.data.map((server) => server.servername));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t{ready === false ? (\n\t\t\t\t<ColumnFlex>\n\t\t\t\t\t<H1>What would you like to be called?</H1>\n\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder=\"Write your username here\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t}}></TextInput>\n\t\t\t\t\t<H1>What is your role?</H1>\n\n\t\t\t\t\t<PlayerButton\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tsetRole('player');\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<img src={Player}></img>\n\t\t\t\t\t\t\tPlayer\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</PlayerButton>\n\t\t\t\t\t<GamemasterButton\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tsetRole('gamemaster');\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={Gamemaster}></img>\n\t\t\t\t\t\tGamemaster\n\t\t\t\t\t</GamemasterButton>\n\t\t\t\t\t<PrimaryButton onClick={beginGame}>Submit</PrimaryButton>\n\t\t\t\t</ColumnFlex>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{role === 'player' ? (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<H1>Join Server</H1>\n\t\t\t\t\t\t\t<label htmlFor=\"username\">Server</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder=\"Find a Server\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetServerName(e.target.value);\n\t\t\t\t\t\t\t\t}}></input>\n\n\t\t\t\t\t\t\t<button onClick={joinServer}>Join</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<H1>Host Server</H1>\n\t\t\t\t\t\t\t<label htmlFor=\"servername\">Server</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname=\"servername\"\n\t\t\t\t\t\t\t\tplaceholder=\"Create a Server\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetServerName(e.target.value);\n\t\t\t\t\t\t\t\t}}></input>\n\n\t\t\t\t\t\t\t<button onClick={createServer}>Create Room</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t);\n\t//\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}