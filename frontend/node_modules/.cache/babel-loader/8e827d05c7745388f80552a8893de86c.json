{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\n_c2 = CurrentNewsContainer;\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n_c3 = EventCard;\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n_c4 = PastEventsContainer;\n\nconst WorldEvents = props => {\n  // TODO: randomize order of world events\n  const shuffleWorldEvents = () => {\n    let j, x, i;\n    let a = props.roundCounter;\n\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n\n    return a;\n  };\n\n  const shuffle = () => {\n    let array = worldEventsData;\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"World Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), props.roundCounter > 1 ? worldEventsData.map((data, index) => index === props.roundCounter ? /*#__PURE__*/_jsxDEV(CurrentNewsContainer, {\n      children: data.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }, this) : null) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PastEventsContainer, {\n      children: props.roundCounter > 1 ? worldEventsData.slice(2, props.roundCounter).map((data, index) => /*#__PURE__*/_jsxDEV(EventCard, {\n        children: data.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = WorldEvents;\nexport default WorldEvents;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CurrentNewsContainer\");\n$RefreshReg$(_c3, \"EventCard\");\n$RefreshReg$(_c4, \"PastEventsContainer\");\n$RefreshReg$(_c5, \"WorldEvents\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js"],"names":["React","styled","worldEventsData","Container","div","CurrentNewsContainer","EventCard","PastEventsContainer","WorldEvents","props","shuffleWorldEvents","j","x","i","a","roundCounter","length","Math","floor","random","shuffle","array","currentIndex","temporaryValue","randomIndex","map","data","index","text","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport worldEventsData from '../worldEventsData';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n`;\n\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nconst WorldEvents = (props) => {\n\t// TODO: randomize order of world events\n\n\tconst shuffleWorldEvents = () => {\n\t\tlet j, x, i;\n\n\t\tlet a = props.roundCounter;\n\n\t\tfor (i = a.length - 1; i > 0; i--) {\n\t\t\tj = Math.floor(Math.random() * (i + 1));\n\t\t\tx = a[i];\n\t\t\ta[i] = a[j];\n\t\t\ta[j] = x;\n\t\t}\n\t\treturn a;\n\t};\n\n\tconst shuffle = () => {\n\t\tlet array = worldEventsData;\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>World Events</h1>\n\t\t\t<h2>Latest</h2>\n\t\t\t{/* TODO: add a placeholder for no news yet */}\n\t\t\t{props.roundCounter > 1\n\t\t\t\t? worldEventsData.map((data, index) =>\n\t\t\t\t\t\tindex === props.roundCounter ? (\n\t\t\t\t\t\t\t<CurrentNewsContainer key={index}>\n\t\t\t\t\t\t\t\t{data.text}\n\t\t\t\t\t\t\t</CurrentNewsContainer>\n\t\t\t\t\t\t) : null\n\t\t\t\t  )\n\t\t\t\t: null}\n\t\t\t<h2>Past</h2>\n\t\t\t<PastEventsContainer>\n\t\t\t\t{props.roundCounter > 1\n\t\t\t\t\t? worldEventsData\n\t\t\t\t\t\t\t.slice(2, props.roundCounter)\n\t\t\t\t\t\t\t.map((data, index) => (\n\t\t\t\t\t\t\t\t<EventCard key={index}>{data.text}</EventCard>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t: null}\n\t\t\t</PastEventsContainer>\n\t\t</Container>\n\t);\n};\n\nexport default WorldEvents;\n"]},"metadata":{},"sourceType":"module"}