{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, HeadingImg, H1 } from '../shared/global';\nimport worldEventsData from '../worldEventsData';\nimport News from './../assets/Icon/News.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n_c = Container;\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n\tbackground-color: #ecf1f7;\n\tcolor: #4f73b6;\n`;\n_c2 = CurrentNewsContainer;\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n_c3 = EventCard;\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n_c4 = PastEventsContainer;\nconst Label = styled.h3`\n\tcolor: #666;\n`;\n_c5 = Label;\nlet newWorldEventsData;\n\nconst shuffle = () => {\n  let array = worldEventsData; // stackoverflow code\n\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  newWorldEventsData = array;\n};\n\nshuffle();\n\nconst WorldEvents = props => {\n  // TODO: randomize order of world events\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeading, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingImg, {\n        src: News\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(H1, {\n        children: \"World Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), props.roundCounter > 1 ? newWorldEventsData.map((data, index) => index === props.roundCounter ? /*#__PURE__*/_jsxDEV(CurrentNewsContainer, {\n      children: data.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this) : null) : null, /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Past\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PastEventsContainer, {\n      children: props.roundCounter > 1 ? newWorldEventsData.slice(2, props.roundCounter).map((data, index) => /*#__PURE__*/_jsxDEV(EventCard, {\n        children: data.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_c6 = WorldEvents;\nexport default WorldEvents;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CurrentNewsContainer\");\n$RefreshReg$(_c3, \"EventCard\");\n$RefreshReg$(_c4, \"PastEventsContainer\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"WorldEvents\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/WorldEvents.js"],"names":["React","useEffect","styled","CardHeading","HeadingImg","H1","worldEventsData","News","Container","div","CurrentNewsContainer","EventCard","PastEventsContainer","Label","h3","newWorldEventsData","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","WorldEvents","props","roundCounter","map","data","index","text","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,EAAlC,QAA4C,kBAA5C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA,CAHA;KAAMD,S;AAKN,MAAME,oBAAoB,GAAGR,MAAM,CAACO,GAAI;AACxC;AACA;AACA;AACA;AACA,CALA;MAAMC,oB;AAON,MAAMC,SAAS,GAAGT,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,S;AAQN,MAAMC,mBAAmB,GAAGV,MAAM,CAACO,GAAI;AACvC;AACA;AACA,CAHA;MAAMG,mB;AAKN,MAAMC,KAAK,GAAGX,MAAM,CAACY,EAAG;AACxB;AACA,CAFA;MAAMD,K;AAIN,IAAIE,kBAAJ;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB,MAAIC,KAAK,GAAGX,eAAZ,CADqB,CAGrB;;AACA,MAAIY,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACCC,cADD;AAAA,MAECC,WAFD,CAJqB,CAQrB;;AACA,SAAO,MAAMH,YAAb,EAA2B;AAC1B;AACAG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB,CAH0B,CAK1B;;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACA;;AAEDL,EAAAA,kBAAkB,GAAGE,KAArB;AACA,CArBD;;AAuBAD,OAAO;;AAEP,MAAMS,WAAW,GAAIC,KAAD,IAAW;AAC9B;AAEA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,WAAD;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEnB;AAAjB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,EAMEmB,KAAK,CAACC,YAAN,GAAqB,CAArB,GACEZ,kBAAkB,CAACa,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KACvBA,KAAK,KAAKJ,KAAK,CAACC,YAAhB,gBACC,QAAC,oBAAD;AAAA,gBACEE,IAAI,CAACE;AADP,OAA2BD,KAA3B;AAAA;AAAA;AAAA;AAAA,YADD,GAII,IALJ,CADF,GAQE,IAdJ,eAgBC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD,eAiBC,QAAC,mBAAD;AAAA,gBACEJ,KAAK,CAACC,YAAN,GAAqB,CAArB,GACEZ,kBAAkB,CACjBiB,KADD,CACO,CADP,EACUN,KAAK,CAACC,YADhB,EAECC,GAFD,CAEK,CAACC,IAAD,EAAOC,KAAP,kBACJ,QAAC,SAAD;AAAA,kBAAwBD,IAAI,CAACE;AAA7B,SAAgBD,KAAhB;AAAA;AAAA;AAAA;AAAA,cAHD,CADF,GAME;AAPJ;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6BA,CAhCD;;MAAML,W;AAkCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, HeadingImg, H1 } from '../shared/global';\nimport worldEventsData from '../worldEventsData';\n\nimport News from './../assets/Icon/News.png';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst CurrentNewsContainer = styled.div`\n\tfont-size: 4rem;\n\ttransition: 2s;\n\tbackground-color: #ecf1f7;\n\tcolor: #4f73b6;\n`;\n\nconst EventCard = styled.div`\n\twidth: 100%;\n\tborder: #ccc 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n`;\n\nconst PastEventsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n`;\n\nconst Label = styled.h3`\n\tcolor: #666;\n`;\n\nlet newWorldEventsData;\n\nconst shuffle = () => {\n\tlet array = worldEventsData;\n\n\t// stackoverflow code\n\tvar currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\tnewWorldEventsData = array;\n};\n\nshuffle();\n\nconst WorldEvents = (props) => {\n\t// TODO: randomize order of world events\n\n\treturn (\n\t\t<Container>\n\t\t\t<CardHeading>\n\t\t\t\t<HeadingImg src={News}></HeadingImg>\n\t\t\t\t<H1>World Events</H1>\n\t\t\t</CardHeading>\n\t\t\t<Label>Latest</Label>\n\t\t\t{props.roundCounter > 1\n\t\t\t\t? newWorldEventsData.map((data, index) =>\n\t\t\t\t\t\tindex === props.roundCounter ? (\n\t\t\t\t\t\t\t<CurrentNewsContainer key={index}>\n\t\t\t\t\t\t\t\t{data.text}\n\t\t\t\t\t\t\t</CurrentNewsContainer>\n\t\t\t\t\t\t) : null\n\t\t\t\t  )\n\t\t\t\t: null}\n\n\t\t\t<Label>Past</Label>\n\t\t\t<PastEventsContainer>\n\t\t\t\t{props.roundCounter > 1\n\t\t\t\t\t? newWorldEventsData\n\t\t\t\t\t\t\t.slice(2, props.roundCounter)\n\t\t\t\t\t\t\t.map((data, index) => (\n\t\t\t\t\t\t\t\t<EventCard key={index}>{data.text}</EventCard>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t: null}\n\t\t\t</PastEventsContainer>\n\t\t</Container>\n\t);\n};\n\nexport default WorldEvents;\n"]},"metadata":{},"sourceType":"module"}