{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/GlossarySearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = styled.div`\n\tbackground-color: #fff;\n`;\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #ccc solid 1px;\n\tborder-radius: 5px;\n\twidth: 100%;\n`;\n_c = StyledSearchBar;\n\nconst GlossarySearch = props => {\n  _s();\n\n  const [filterTerm, setFilterTerm] = useState(''); // const filterGlossary = glossaryItem.filter((item) => {\n  // \treturn Object.keys(item).some((key) =>\n  // \t\titem[key].toLowerCase().includes(lowercasedFilter)\n  // \t);\n  // });\n  //\n\n  const glossaryItem = glossary.filter(({\n    term\n  }) => term === filterTerm.toLowerCase()).map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, data.term, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 4\n  }, this));\n  console.log(glossaryItem);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledSearchBar, {\n      value: filterTerm,\n      placeholder: \"Search for Terms\",\n      onChange: e => {\n        setFilterTerm(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), glossaryItem]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GlossarySearch, \"FlKUzDNpEN/aeVPTCFIhGlzwrrk=\");\n\n_c2 = GlossarySearch;\nexport default GlossarySearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSearchBar\");\n$RefreshReg$(_c2, \"GlossarySearch\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/GlossarySearch.js"],"names":["React","useState","useEffect","styled","glossary","Modal","div","StyledSearchBar","input","GlossarySearch","props","filterTerm","setFilterTerm","glossaryItem","filter","term","toLowerCase","map","data","definition","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAI;AACzB;AACA,CAFA;AAIA,MAAMC,eAAe,GAAGJ,MAAM,CAACK,KAAM;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,e;;AAQN,MAAME,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMY,YAAY,GAAGT,QAAQ,CAC3BU,MADmB,CACZ,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKJ,UAAU,CAACK,WAAX,EADX,EAEnBC,GAFmB,CAEdC,IAAD,iBACJ;AAAA,4BACC;AAAA,gBAAKA,IAAI,CAACH;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIG,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAUD,IAAI,CAACH,IAAf;AAAA;AAAA;AAAA;AAAA,UAHmB,CAArB;AASAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AAEA,sBACC;AAAA,4BACC,QAAC,eAAD;AACC,MAAA,KAAK,EAAEF,UADR;AAEC,MAAA,WAAW,EAAC,kBAFb;AAGC,MAAA,QAAQ,EAAGW,CAAD,IAAO;AAChBV,QAAAA,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA;AALF;AAAA;AAAA;AAAA;AAAA,YADD,EAOEX,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA/BD;;GAAMJ,c;;MAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport glossary from './../glossary';\n\nconst Modal = styled.div`\n\tbackground-color: #fff;\n`;\n\nconst StyledSearchBar = styled.input`\n\tfont-size: 1rem;\n\tpadding: 1rem;\n\tborder: #ccc solid 1px;\n\tborder-radius: 5px;\n\twidth: 100%;\n`;\n\nconst GlossarySearch = (props) => {\n\tconst [filterTerm, setFilterTerm] = useState('');\n\t// const filterGlossary = glossaryItem.filter((item) => {\n\t// \treturn Object.keys(item).some((key) =>\n\t// \t\titem[key].toLowerCase().includes(lowercasedFilter)\n\t// \t);\n\t// });\n\t//\n\n\tconst glossaryItem = glossary\n\t\t.filter(({ term }) => term === filterTerm.toLowerCase())\n\t\t.map((data) => (\n\t\t\t<div key={data.term}>\n\t\t\t\t<h1>{data.term}</h1>\n\t\t\t\t<p>{data.definition}</p>\n\t\t\t</div>\n\t\t));\n\n\tconsole.log(glossaryItem);\n\n\treturn (\n\t\t<div>\n\t\t\t<StyledSearchBar\n\t\t\t\tvalue={filterTerm}\n\t\t\t\tplaceholder=\"Search for Terms\"\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetFilterTerm(e.target.value);\n\t\t\t\t}}></StyledSearchBar>\n\t\t\t{glossaryItem}\n\t\t</div>\n\t);\n};\n\nexport default GlossarySearch;\n"]},"metadata":{},"sourceType":"module"}