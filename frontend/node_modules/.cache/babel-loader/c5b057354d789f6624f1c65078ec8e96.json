{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/CreateServer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, H1, PrimaryButton } from '../shared/global';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateServer = props => {\n  _s();\n\n  const [servername, setservername] = useState();\n  const [existingServers, setExistingServers] = useState([]);\n\n  const createServername = e => {\n    e.preventDefault();\n    console.log(servername);\n    const serverRoom = {\n      servername: servername\n    };\n    axios.post('http://localhost:5000/serverRoom/add', serverRoom).then(res => console.log(res.data));\n  };\n\n  useEffect(function () {\n    axios.get('http://localhost:5000/serverRoom').then(response => {\n      if (response.data.length > 0) {\n        setExistingServers(response.data.map(server => server.servername));\n        console.log(existingServers);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Create a Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setservername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: createServername,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateServer, \"Co+8FEiAACdMLbmWL/dNkFlGDeA=\");\n\n_c = CreateServer;\nexport default CreateServer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateServer\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/CreateServer.js"],"names":["React","useState","useEffect","Container","H1","PrimaryButton","axios","CreateServer","props","servername","setservername","existingServers","setExistingServers","createServername","e","preventDefault","console","log","serverRoom","post","then","res","data","get","response","length","map","server","catch","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,EAApB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMY,gBAAgB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAEA,UAAMS,UAAU,GAAG;AAClBT,MAAAA,UAAU,EAAEA;AADM,KAAnB;AAIAH,IAAAA,KAAK,CACHa,IADF,CACO,sCADP,EAC+CD,UAD/C,EAEEE,IAFF,CAEQC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB,CAFhB;AAGA,GAXD;;AAaApB,EAAAA,SAAS,CAAC,YAAY;AACrBI,IAAAA,KAAK,CACHiB,GADF,CACM,kCADN,EAEEH,IAFF,CAEQI,QAAD,IAAc;AACnB,UAAIA,QAAQ,CAACF,IAAT,CAAcG,MAAd,GAAuB,CAA3B,EAA8B;AAC7Bb,QAAAA,kBAAkB,CAACY,QAAQ,CAACF,IAAT,CAAcI,GAAd,CAAmBC,MAAD,IAAYA,MAAM,CAAClB,UAArC,CAAD,CAAlB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;AACA;AACD,KAPF,EAQEiB,KARF,CAQSC,KAAD,IAAW;AACjBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,KAVF;AAWA,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AACC,MAAA,QAAQ,EAAGf,CAAD,IAAO;AAChBJ,QAAAA,aAAa,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAb;AACA;AAHF;AAAA;AAAA;AAAA;AAAA,YAFD,eAMC,QAAC,aAAD;AAAe,MAAA,OAAO,EAAElB,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,eAOC,qCAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmBA,CAlDD;;GAAMN,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, H1, PrimaryButton } from '../shared/global';\nimport axios from 'axios';\n\nconst CreateServer = (props) => {\n\tconst [servername, setservername] = useState();\n\tconst [existingServers, setExistingServers] = useState([]);\n\n\tconst createServername = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(servername);\n\n\t\tconst serverRoom = {\n\t\t\tservername: servername,\n\t\t};\n\n\t\taxios\n\t\t\t.post('http://localhost:5000/serverRoom/add', serverRoom)\n\t\t\t.then((res) => console.log(res.data));\n\t};\n\n\tuseEffect(function () {\n\t\taxios\n\t\t\t.get('http://localhost:5000/serverRoom')\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.length > 0) {\n\t\t\t\t\tsetExistingServers(response.data.map((server) => server.servername));\n\t\t\t\t\tconsole.log(existingServers);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t<H1>Create a Server</H1>\n\t\t\t<input\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetservername(e.target.value);\n\t\t\t\t}}></input>\n\t\t\t<PrimaryButton onClick={createServername}>Create</PrimaryButton>\n\t\t\t<>\n\t\t\t\t{/* {existingServers.map((server) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<p key={server.servername} value={server.servername}>\n\t\t\t\t\t\t\t{server.servername}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t);\n\t\t\t\t})} */}\n\t\t\t</>\n\t\t</Container>\n\t);\n};\n\nexport default CreateServer;\n"]},"metadata":{},"sourceType":"module"}