{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/Glossary.js\";\nimport React from 'react';\nimport glossary from './../glossary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Glossary = ({\n  glossary = []\n}) => {\n  const glossaryItem = glossary.filter(({\n    keyword\n  }) => keyword !== null).map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, data.term, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: glossary\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Glossary;\nexport default Glossary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Glossary\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/components/Glossary.js"],"names":["React","glossary","Glossary","glossaryItem","filter","keyword","map","data","term","definition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,QAAQ,GAAG;AAAb,CAAD,KAAuB;AACvC,QAAME,YAAY,GAAGF,QAAQ,CAC3BG,MADmB,CACZ,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBA,OAAO,KAAK,IADjB,EAEnBC,GAFmB,CAEdC,IAAD,iBACJ;AAAA,4BACC;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAUF,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA,UAHmB,CAArB;AAQA,sBAAO;AAAA,cAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAVD;;KAAMC,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport glossary from './../glossary';\n\nconst Glossary = ({ glossary = [] }) => {\n\tconst glossaryItem = glossary\n\t\t.filter(({ keyword }) => keyword !== null)\n\t\t.map((data) => (\n\t\t\t<div key={data.term}>\n\t\t\t\t<h1>{data.term}</h1>\n\t\t\t\t<p>{data.definition}</p>\n\t\t\t</div>\n\t\t));\n\treturn <div>{glossary}</div>;\n};\n\nexport default Glossary;\n"]},"metadata":{},"sourceType":"module"}