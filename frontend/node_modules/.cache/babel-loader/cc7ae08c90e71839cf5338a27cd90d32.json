{"ast":null,"code":"import _slicedToArray from\"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import{CardHeading,H1,HeadingImg,P}from'../shared/global';import stockMarketData from'../stockMarketData';import Stocks from'../assets/Icon/Stocks.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\twidth: 100%;\\n\\toverflow: auto;\\n\"])));var StockCardContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\twidth: 100%;\\n\\tborder: #eee 1px solid;\\n\\tpadding: 0.5rem;\\n\\tmargin: 0.5rem 0;\\n\\tborder-radius: 5px;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: repeat(12, 1fr);\\n\\tgrid-column-gap: 2rem;\\n\"])));var Ticker=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n\\tgrid-column: span 2;\\n\\tfont-weight: 700;\\n\"])));var StockName=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n\\tgrid-column: span 6;\\n\"])));var StockPrice=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n\\tgrid-column: span 3;\\n\\tfont-weight: 700;\\n\\t&::before {\\n\\t\\tcontent: '$';\\n\\t}\\n\"])));var ArrowContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n\\tgrid-column: span 1;\\n\"])));var MaterialIcons=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n\\tfont-family: 'Material Icons';\\n\"])));var StockCard=function StockCard(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),stockPrice=_useState2[0],setStockPrice=_useState2[1];var previousPriceRef=useRef();var MINUTE_MS=1000;// 5 minutes is 300000\nvar growth=Math.floor(props.monthlyGrowth*props.roundCounter);useEffect(function(){var interval=setInterval(function(){setStockPrice(props.startingPrice+Math.floor(Math.random(0,growth)*100));console.log('Logs every second');},MINUTE_MS);return function(){return clearInterval(interval);};},[]);useEffect(function(){previousPriceRef.current=stockPrice;});var previousPrice=previousPriceRef.current;var arrow;if(stockPrice>previousPrice){arrow=/*#__PURE__*/_jsx(MaterialIcons,{style:{color:'#33B466'},children:\"arrow_upward\"});}else if(stockPrice<previousPrice){arrow=/*#__PURE__*/_jsx(MaterialIcons,{style:{color:'#C64949'},children:\"arrow_downward\"});}else{arrow=/*#__PURE__*/_jsx(MaterialIcons,{children:\"=\"});}return/*#__PURE__*/_jsxs(StockCardContainer,{children:[/*#__PURE__*/_jsx(Ticker,{children:props.stockTicker}),/*#__PURE__*/_jsx(StockName,{children:props.stockName}),/*#__PURE__*/_jsx(StockPrice,{children:stockPrice}),/*#__PURE__*/_jsx(ArrowContainer,{children:arrow})]});};var StockMarket=function StockMarket(props){var stocks=stockMarketData.map(function(stock){return/*#__PURE__*/_jsx(StockCard,{roundCounter:props.roundCounter,stockTicker:stock.ticker,stockName:stock.stockName,startingPrice:stock.startingPrice,monthlyGrowth:stock.monthlyGrowth},stock.ticker);});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(CardHeading,{children:[/*#__PURE__*/_jsx(HeadingImg,{src:Stocks}),/*#__PURE__*/_jsx(H1,{children:\"Stock Market\"})]}),stocks]});};export default StockMarket;","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/frontend/src/components/StockMarket.js"],"names":["React","useState","useEffect","useRef","styled","CardHeading","H1","HeadingImg","P","stockMarketData","Stocks","Container","div","StockCardContainer","Ticker","StockName","StockPrice","ArrowContainer","MaterialIcons","StockCard","props","stockPrice","setStockPrice","previousPriceRef","MINUTE_MS","growth","Math","floor","monthlyGrowth","roundCounter","interval","setInterval","startingPrice","random","console","log","clearInterval","current","previousPrice","arrow","color","stockTicker","stockName","StockMarket","stocks","map","stock","ticker"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { CardHeading, H1, HeadingImg, P } from '../shared/global';\nimport stockMarketData from '../stockMarketData';\nimport Stocks from '../assets/Icon/Stocks.png';\n\nconst Container = styled.div`\n\twidth: 100%;\n\toverflow: auto;\n`;\n\nconst StockCardContainer = styled.div`\n\twidth: 100%;\n\tborder: #eee 1px solid;\n\tpadding: 0.5rem;\n\tmargin: 0.5rem 0;\n\tborder-radius: 5px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(12, 1fr);\n\tgrid-column-gap: 2rem;\n`;\n\nconst Ticker = styled.div`\n\tgrid-column: span 2;\n\tfont-weight: 700;\n`;\n\nconst StockName = styled.div`\n\tgrid-column: span 6;\n`;\n\nconst StockPrice = styled.div`\n\tgrid-column: span 3;\n\tfont-weight: 700;\n\t&::before {\n\t\tcontent: '$';\n\t}\n`;\n\nconst ArrowContainer = styled.div`\n\tgrid-column: span 1;\n`;\n\nconst MaterialIcons = styled.div`\n\tfont-family: 'Material Icons';\n`;\n\nconst StockCard = (props) => {\n\tconst [stockPrice, setStockPrice] = useState(0);\n\tconst previousPriceRef = useRef();\n\n\tconst MINUTE_MS = 1000; // 5 minutes is 300000\n\n\tlet growth = Math.floor(props.monthlyGrowth * props.roundCounter);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetStockPrice(\n\t\t\t\tprops.startingPrice + Math.floor(Math.random(0, growth) * 100)\n\t\t\t);\n\t\t\tconsole.log('Logs every second');\n\t\t}, MINUTE_MS);\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tpreviousPriceRef.current = stockPrice;\n\t});\n\n\tconst previousPrice = previousPriceRef.current;\n\n\tlet arrow;\n\n\tif (stockPrice > previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#33B466' }}>arrow_upward</MaterialIcons>\n\t\t);\n\t} else if (stockPrice < previousPrice) {\n\t\tarrow = (\n\t\t\t<MaterialIcons style={{ color: '#C64949' }}>arrow_downward</MaterialIcons>\n\t\t);\n\t} else {\n\t\tarrow = <MaterialIcons>=</MaterialIcons>;\n\t}\n\n\treturn (\n\t\t<StockCardContainer>\n\t\t\t<Ticker>{props.stockTicker}</Ticker>\n\t\t\t<StockName>{props.stockName}</StockName>\n\t\t\t<StockPrice>{stockPrice}</StockPrice>\n\t\t\t<ArrowContainer>{arrow}</ArrowContainer>\n\t\t</StockCardContainer>\n\t);\n};\n\nconst StockMarket = (props) => {\n\tconst stocks = stockMarketData.map((stock) => (\n\t\t<StockCard\n\t\t\troundCounter={props.roundCounter}\n\t\t\tstockTicker={stock.ticker}\n\t\t\tstockName={stock.stockName}\n\t\t\tstartingPrice={stock.startingPrice}\n\t\t\tmonthlyGrowth={stock.monthlyGrowth}\n\t\t\tkey={stock.ticker}></StockCard>\n\t));\n\n\treturn (\n\t\t<Container>\n\t\t\t<CardHeading>\n\t\t\t\t<HeadingImg src={Stocks}></HeadingImg>\n\t\t\t\t<H1>Stock Market</H1>\n\t\t\t</CardHeading>\n\t\t\t{stocks}\n\t\t</Container>\n\t);\n};\n\nexport default StockMarket;\n"]},"metadata":{},"sourceType":"module"}