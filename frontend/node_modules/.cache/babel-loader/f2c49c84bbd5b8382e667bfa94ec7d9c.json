{"ast":null,"code":"var _jsxFileName = \"/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../shared/global';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nlet connectionOptions = {\n  'force new connection': true,\n  reconnectionAttempts: 'Infinity',\n  timeout: 1000,\n  transports: ['websocket']\n};\n\nconst Player = (props, {\n  location\n}) => {\n  _s();\n\n  const socket = props.socket;\n  const [username, setUsername] = useState('');\n  const [servername, setServername] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000';\n  useEffect(() => {\n    const {\n      username,\n      servername\n    } = queryString.parse(location.search);\n    socket = io.connect(ENDPOINT, connectionOptions);\n    setUsername(username);\n    setServername(servername);\n    socket.emit('join', {\n      username,\n      servername\n    }, ({}) => {});\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    socket: socket,\n    servername: servername,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Player, \"REnuAzxirePlTNTbn0Jg1rbbk6E=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/roneillabumanlag/GitHub/IXDS2-Project/companion-app/src/pages/Player.js"],"names":["React","useState","styled","Container","queryString","io","socket","connectionOptions","reconnectionAttempts","timeout","transports","Player","props","location","username","setUsername","servername","setServername","message","setMessage","messages","setMessages","ENDPOINT","useEffect","parse","search","connect","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,MAAJ;AAEA,IAAIC,iBAAiB,GAAG;AACvB,0BAAwB,IADD;AAEvBC,EAAAA,oBAAoB,EAAE,UAFC;AAGvBC,EAAAA,OAAO,EAAE,IAHc;AAIvBC,EAAAA,UAAU,EAAE,CAAC,WAAD;AAJW,CAAxB;;AAOA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAyB;AAAA;;AACvC,QAAMP,MAAM,GAAGM,KAAK,CAACN,MAArB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMqB,QAAQ,GAAG,uBAAjB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM;AAAET,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2BZ,WAAW,CAACoB,KAAZ,CAAkBX,QAAQ,CAACY,MAA3B,CAAjC;AAEAnB,IAAAA,MAAM,GAAGD,EAAE,CAACqB,OAAH,CAAWJ,QAAX,EAAqBf,iBAArB,CAAT;AAEAQ,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,aAAa,CAACD,UAAD,CAAb;AAEAV,IAAAA,MAAM,CAACqB,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAApB,EAA8C,CAAC,EAAD,KAAQ,CAAE,CAAxD;AACA,GATQ,EASN,CAACM,QAAD,EAAWT,QAAQ,CAACY,MAApB,CATM,CAAT;AAWA,sBACC,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEnB,MAAnB;AAA2B,IAAA,UAAU,EAAEU,UAAvC;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAzBD;;GAAML,M;;KAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../shared/global';\n\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nlet socket;\n\nlet connectionOptions = {\n\t'force new connection': true,\n\treconnectionAttempts: 'Infinity',\n\ttimeout: 1000,\n\ttransports: ['websocket'],\n};\n\nconst Player = (props, { location }) => {\n\tconst socket = props.socket;\n\tconst [username, setUsername] = useState('');\n\tconst [servername, setServername] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\n\tconst ENDPOINT = 'http://localhost:5000';\n\n\tuseEffect(() => {\n\t\tconst { username, servername } = queryString.parse(location.search);\n\n\t\tsocket = io.connect(ENDPOINT, connectionOptions);\n\n\t\tsetUsername(username);\n\t\tsetServername(servername);\n\n\t\tsocket.emit('join', { username, servername }, ({}) => {});\n\t}, [ENDPOINT, location.search]);\n\n\treturn (\n\t\t<Container socket={socket} servername={servername}>\n\t\t\t<div></div>\n\t\t</Container>\n\t);\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}